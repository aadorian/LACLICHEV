#ifndef java_text_NumberFormat_H
#define java_text_NumberFormat_H

#include "java/text/Format.h"

namespace java {
  namespace lang {
    class Number;
    class Class;
    class StringBuffer;
    class Object;
    class String;
  }
  namespace util {
    class Locale;
    class Currency;
  }
}
template<class T> class JArray;

namespace java {
  namespace text {

    class NumberFormat : public ::java::text::Format {
    public:
      enum {
        mid_clone_fcd621d44e119d75,
        mid_equals_55f7ed877b4720ef,
        mid_format_2d2f98e9862a8d2e,
        mid_format_00812b845ebcd112,
        mid_getAvailableLocales_4b9d6fea82ac31c2,
        mid_getCurrency_b0f540f8b93a0672,
        mid_getCurrencyInstance_3fc6cca0382ebf9e,
        mid_getCurrencyInstance_0616fa02a5be00a2,
        mid_getInstance_3fc6cca0382ebf9e,
        mid_getInstance_0616fa02a5be00a2,
        mid_getIntegerInstance_3fc6cca0382ebf9e,
        mid_getIntegerInstance_0616fa02a5be00a2,
        mid_getMaximumFractionDigits_c6ef1683adc87377,
        mid_getMaximumIntegerDigits_c6ef1683adc87377,
        mid_getMinimumFractionDigits_c6ef1683adc87377,
        mid_getMinimumIntegerDigits_c6ef1683adc87377,
        mid_getNumberInstance_3fc6cca0382ebf9e,
        mid_getNumberInstance_0616fa02a5be00a2,
        mid_getPercentInstance_3fc6cca0382ebf9e,
        mid_getPercentInstance_0616fa02a5be00a2,
        mid_hashCode_c6ef1683adc87377,
        mid_isGroupingUsed_cc8de42f0a91785b,
        mid_isParseIntegerOnly_cc8de42f0a91785b,
        mid_parse_f02553e3fe799e29,
        mid_setCurrency_7fccb1fb983c5450,
        mid_setGroupingUsed_787a33a11683567e,
        mid_setMaximumFractionDigits_e3e5f5ff373509b3,
        mid_setMaximumIntegerDigits_e3e5f5ff373509b3,
        mid_setMinimumFractionDigits_e3e5f5ff373509b3,
        mid_setMinimumIntegerDigits_e3e5f5ff373509b3,
        mid_setParseIntegerOnly_787a33a11683567e,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit NumberFormat(jobject obj) : ::java::text::Format(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      NumberFormat(const NumberFormat& obj) : ::java::text::Format(obj) {}

      static jint FRACTION_FIELD;
      static jint INTEGER_FIELD;

      ::java::lang::Object clone() const;
      jboolean equals(const ::java::lang::Object &) const;
      ::java::lang::String format(jdouble) const;
      ::java::lang::String format(jlong) const;
      static JArray< ::java::util::Locale > getAvailableLocales();
      ::java::util::Currency getCurrency() const;
      static NumberFormat getCurrencyInstance();
      static NumberFormat getCurrencyInstance(const ::java::util::Locale &);
      static NumberFormat getInstance();
      static NumberFormat getInstance(const ::java::util::Locale &);
      static NumberFormat getIntegerInstance();
      static NumberFormat getIntegerInstance(const ::java::util::Locale &);
      jint getMaximumFractionDigits() const;
      jint getMaximumIntegerDigits() const;
      jint getMinimumFractionDigits() const;
      jint getMinimumIntegerDigits() const;
      static NumberFormat getNumberInstance();
      static NumberFormat getNumberInstance(const ::java::util::Locale &);
      static NumberFormat getPercentInstance();
      static NumberFormat getPercentInstance(const ::java::util::Locale &);
      jint hashCode() const;
      jboolean isGroupingUsed() const;
      jboolean isParseIntegerOnly() const;
      ::java::lang::Number parse(const ::java::lang::String &) const;
      void setCurrency(const ::java::util::Currency &) const;
      void setGroupingUsed(jboolean) const;
      void setMaximumFractionDigits(jint) const;
      void setMaximumIntegerDigits(jint) const;
      void setMinimumFractionDigits(jint) const;
      void setMinimumIntegerDigits(jint) const;
      void setParseIntegerOnly(jboolean) const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace text {
    extern PyTypeObject PY_TYPE(NumberFormat);

    class t_NumberFormat {
    public:
      PyObject_HEAD
      NumberFormat object;
      static PyObject *wrap_Object(const NumberFormat&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
