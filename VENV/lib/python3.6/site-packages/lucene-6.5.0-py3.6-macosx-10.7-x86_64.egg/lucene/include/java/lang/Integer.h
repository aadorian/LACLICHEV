#ifndef java_lang_Integer_H
#define java_lang_Integer_H

#include "java/lang/Number.h"

namespace java {
  namespace lang {
    class NumberFormatException;
    class Class;
    class Comparable;
    class Object;
    class String;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class Integer : public ::java::lang::Number {
    public:
      enum {
        mid_init$_e3e5f5ff373509b3,
        mid_init$_3e4369e088f8ac83,
        mid_bitCount_eb4f2d82869c338b,
        mid_byteValue_9714a86531c8152d,
        mid_compare_9ebb972a63d3bb3c,
        mid_compareTo_01a0a24c13642760,
        mid_compareUnsigned_9ebb972a63d3bb3c,
        mid_decode_eff28db7ae4fc404,
        mid_divideUnsigned_9ebb972a63d3bb3c,
        mid_doubleValue_44067586fec56606,
        mid_equals_55f7ed877b4720ef,
        mid_floatValue_388e059cf45fb2f9,
        mid_getInteger_eff28db7ae4fc404,
        mid_getInteger_4edb453c772a7bf8,
        mid_getInteger_d25d1f8718aee716,
        mid_hashCode_c6ef1683adc87377,
        mid_hashCode_eb4f2d82869c338b,
        mid_highestOneBit_eb4f2d82869c338b,
        mid_intValue_c6ef1683adc87377,
        mid_longValue_25efeb8f9279460d,
        mid_lowestOneBit_eb4f2d82869c338b,
        mid_max_9ebb972a63d3bb3c,
        mid_min_9ebb972a63d3bb3c,
        mid_numberOfLeadingZeros_eb4f2d82869c338b,
        mid_numberOfTrailingZeros_eb4f2d82869c338b,
        mid_parseInt_07a398a2298c97a7,
        mid_parseInt_0159111ae701015e,
        mid_parseUnsignedInt_07a398a2298c97a7,
        mid_parseUnsignedInt_0159111ae701015e,
        mid_remainderUnsigned_9ebb972a63d3bb3c,
        mid_reverse_eb4f2d82869c338b,
        mid_reverseBytes_eb4f2d82869c338b,
        mid_rotateLeft_9ebb972a63d3bb3c,
        mid_rotateRight_9ebb972a63d3bb3c,
        mid_shortValue_6687947706ee7380,
        mid_signum_eb4f2d82869c338b,
        mid_sum_9ebb972a63d3bb3c,
        mid_toBinaryString_e5ab4ec225f780e9,
        mid_toHexString_e5ab4ec225f780e9,
        mid_toOctalString_e5ab4ec225f780e9,
        mid_toString_8cdd42a672015029,
        mid_toString_e5ab4ec225f780e9,
        mid_toString_2f188a32ac95e8d9,
        mid_toUnsignedLong_007c8c4f98ad7f46,
        mid_toUnsignedString_e5ab4ec225f780e9,
        mid_toUnsignedString_2f188a32ac95e8d9,
        mid_valueOf_1da59cd767c9f26c,
        mid_valueOf_eff28db7ae4fc404,
        mid_valueOf_4edb453c772a7bf8,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit Integer(jobject obj) : ::java::lang::Number(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      Integer(const Integer& obj) : ::java::lang::Number(obj) {}

      static jint BYTES;
      static jint MAX_VALUE;
      static jint MIN_VALUE;
      static jint SIZE;
      static ::java::lang::Class *TYPE;

      Integer(jint);
      Integer(const ::java::lang::String &);

      static jint bitCount(jint);
      jbyte byteValue() const;
      static jint compare(jint, jint);
      jint compareTo(const Integer &) const;
      static jint compareUnsigned(jint, jint);
      static Integer decode(const ::java::lang::String &);
      static jint divideUnsigned(jint, jint);
      jdouble doubleValue() const;
      jboolean equals(const ::java::lang::Object &) const;
      jfloat floatValue() const;
      static Integer getInteger(const ::java::lang::String &);
      static Integer getInteger(const ::java::lang::String &, jint);
      static Integer getInteger(const ::java::lang::String &, const Integer &);
      jint hashCode() const;
      static jint hashCode(jint);
      static jint highestOneBit(jint);
      jint intValue() const;
      jlong longValue() const;
      static jint lowestOneBit(jint);
      static jint max$(jint, jint);
      static jint min$(jint, jint);
      static jint numberOfLeadingZeros(jint);
      static jint numberOfTrailingZeros(jint);
      static jint parseInt(const ::java::lang::String &);
      static jint parseInt(const ::java::lang::String &, jint);
      static jint parseUnsignedInt(const ::java::lang::String &);
      static jint parseUnsignedInt(const ::java::lang::String &, jint);
      static jint remainderUnsigned(jint, jint);
      static jint reverse(jint);
      static jint reverseBytes(jint);
      static jint rotateLeft(jint, jint);
      static jint rotateRight(jint, jint);
      jshort shortValue() const;
      static jint signum(jint);
      static jint sum(jint, jint);
      static ::java::lang::String toBinaryString(jint);
      static ::java::lang::String toHexString(jint);
      static ::java::lang::String toOctalString(jint);
      ::java::lang::String toString() const;
      static ::java::lang::String toString(jint);
      static ::java::lang::String toString(jint, jint);
      static jlong toUnsignedLong(jint);
      static ::java::lang::String toUnsignedString(jint);
      static ::java::lang::String toUnsignedString(jint, jint);
      static Integer valueOf(jint);
      static Integer valueOf(const ::java::lang::String &);
      static Integer valueOf(const ::java::lang::String &, jint);
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyTypeObject PY_TYPE(Integer);

    class t_Integer {
    public:
      PyObject_HEAD
      Integer object;
      static PyObject *wrap_Object(const Integer&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
