#ifndef java_util_Date_H
#define java_util_Date_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class Class;
    class Comparable;
    class String;
    class Cloneable;
  }
  namespace io {
    class Serializable;
  }
}
template<class T> class JArray;

namespace java {
  namespace util {

    class Date : public ::java::lang::Object {
    public:
      enum {
        mid_init$_baea6bf243e2d9b8,
        mid_init$_3e4369e088f8ac83,
        mid_init$_ea7e2607a44304f3,
        mid_init$_275ffc0519c7ce01,
        mid_init$_8d482d4213cc608f,
        mid_init$_fc0ef594f995bc01,
        mid_UTC_672500936651389f,
        mid_after_1cab21f2ef6bd49a,
        mid_before_1cab21f2ef6bd49a,
        mid_clone_fcd621d44e119d75,
        mid_compareTo_0777a062f877f022,
        mid_equals_55f7ed877b4720ef,
        mid_getDate_c6ef1683adc87377,
        mid_getDay_c6ef1683adc87377,
        mid_getHours_c6ef1683adc87377,
        mid_getMinutes_c6ef1683adc87377,
        mid_getMonth_c6ef1683adc87377,
        mid_getSeconds_c6ef1683adc87377,
        mid_getTime_25efeb8f9279460d,
        mid_getTimezoneOffset_c6ef1683adc87377,
        mid_getYear_c6ef1683adc87377,
        mid_hashCode_c6ef1683adc87377,
        mid_parse_9d541dc47c492f6a,
        mid_setDate_e3e5f5ff373509b3,
        mid_setHours_e3e5f5ff373509b3,
        mid_setMinutes_e3e5f5ff373509b3,
        mid_setMonth_e3e5f5ff373509b3,
        mid_setSeconds_e3e5f5ff373509b3,
        mid_setTime_ea7e2607a44304f3,
        mid_setYear_e3e5f5ff373509b3,
        mid_toGMTString_8cdd42a672015029,
        mid_toLocaleString_8cdd42a672015029,
        mid_toString_8cdd42a672015029,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit Date(jobject obj) : ::java::lang::Object(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      Date(const Date& obj) : ::java::lang::Object(obj) {}

      Date();
      Date(const ::java::lang::String &);
      Date(jlong);
      Date(jint, jint, jint);
      Date(jint, jint, jint, jint, jint);
      Date(jint, jint, jint, jint, jint, jint);

      static jlong UTC(jint, jint, jint, jint, jint, jint);
      jboolean after(const Date &) const;
      jboolean before(const Date &) const;
      ::java::lang::Object clone() const;
      jint compareTo(const Date &) const;
      jboolean equals(const ::java::lang::Object &) const;
      jint getDate() const;
      jint getDay() const;
      jint getHours() const;
      jint getMinutes() const;
      jint getMonth() const;
      jint getSeconds() const;
      jlong getTime() const;
      jint getTimezoneOffset() const;
      jint getYear() const;
      jint hashCode() const;
      static jlong parse(const ::java::lang::String &);
      void setDate(jint) const;
      void setHours(jint) const;
      void setMinutes(jint) const;
      void setMonth(jint) const;
      void setSeconds(jint) const;
      void setTime(jlong) const;
      void setYear(jint) const;
      ::java::lang::String toGMTString() const;
      ::java::lang::String toLocaleString() const;
      ::java::lang::String toString() const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace util {
    extern PyTypeObject PY_TYPE(Date);

    class t_Date {
    public:
      PyObject_HEAD
      Date object;
      static PyObject *wrap_Object(const Date&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
