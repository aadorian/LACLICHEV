#ifndef java_lang_Float_H
#define java_lang_Float_H

#include "java/lang/Number.h"

namespace java {
  namespace lang {
    class NumberFormatException;
    class Class;
    class Comparable;
    class Object;
    class String;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class Float : public ::java::lang::Number {
    public:
      enum {
        mid_init$_3e4369e088f8ac83,
        mid_init$_1b85c158638de45b,
        mid_init$_3c7afe1a86cc960f,
        mid_byteValue_9714a86531c8152d,
        mid_compare_69e03053f680620f,
        mid_compareTo_7e9d0c33ec9e6166,
        mid_doubleValue_44067586fec56606,
        mid_equals_55f7ed877b4720ef,
        mid_floatToIntBits_5c2685a1273e9060,
        mid_floatToRawIntBits_5c2685a1273e9060,
        mid_floatValue_388e059cf45fb2f9,
        mid_hashCode_c6ef1683adc87377,
        mid_hashCode_5c2685a1273e9060,
        mid_intBitsToFloat_a03598f6d111e8a0,
        mid_intValue_c6ef1683adc87377,
        mid_isFinite_17572a2a96126267,
        mid_isInfinite_cc8de42f0a91785b,
        mid_isInfinite_17572a2a96126267,
        mid_isNaN_cc8de42f0a91785b,
        mid_isNaN_17572a2a96126267,
        mid_longValue_25efeb8f9279460d,
        mid_max_5b7f2bbad4727a1f,
        mid_min_5b7f2bbad4727a1f,
        mid_parseFloat_7453a65f40d6d068,
        mid_shortValue_6687947706ee7380,
        mid_sum_5b7f2bbad4727a1f,
        mid_toHexString_b8c0ba2fce24e9a4,
        mid_toString_8cdd42a672015029,
        mid_toString_b8c0ba2fce24e9a4,
        mid_valueOf_81de2bc782ac57ae,
        mid_valueOf_47cf6efdc9017efd,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit Float(jobject obj) : ::java::lang::Number(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      Float(const Float& obj) : ::java::lang::Number(obj) {}

      static jint BYTES;
      static jint MAX_EXPONENT;
      static jfloat MAX_VALUE;
      static jint MIN_EXPONENT;
      static jfloat MIN_NORMAL;
      static jfloat MIN_VALUE;
      static jfloat NEGATIVE_INFINITY;
      static jfloat NaN;
      static jfloat POSITIVE_INFINITY;
      static jint SIZE;
      static ::java::lang::Class *TYPE;

      Float(const ::java::lang::String &);
      Float(jdouble);
      Float(jfloat);

      jbyte byteValue() const;
      static jint compare(jfloat, jfloat);
      jint compareTo(const Float &) const;
      jdouble doubleValue() const;
      jboolean equals(const ::java::lang::Object &) const;
      static jint floatToIntBits(jfloat);
      static jint floatToRawIntBits(jfloat);
      jfloat floatValue() const;
      jint hashCode() const;
      static jint hashCode(jfloat);
      static jfloat intBitsToFloat(jint);
      jint intValue() const;
      static jboolean isFinite(jfloat);
      jboolean isInfinite() const;
      static jboolean isInfinite(jfloat);
      jboolean isNaN() const;
      static jboolean isNaN(jfloat);
      jlong longValue() const;
      static jfloat max$(jfloat, jfloat);
      static jfloat min$(jfloat, jfloat);
      static jfloat parseFloat(const ::java::lang::String &);
      jshort shortValue() const;
      static jfloat sum(jfloat, jfloat);
      static ::java::lang::String toHexString(jfloat);
      ::java::lang::String toString() const;
      static ::java::lang::String toString(jfloat);
      static Float valueOf(jfloat);
      static Float valueOf(const ::java::lang::String &);
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyTypeObject PY_TYPE(Float);

    class t_Float {
    public:
      PyObject_HEAD
      Float object;
      static PyObject *wrap_Object(const Float&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
