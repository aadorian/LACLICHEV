#ifndef java_lang_StringBuilder_H
#define java_lang_StringBuilder_H

#include "java/lang/AbstractStringBuilder.h"

namespace java {
  namespace lang {
    class Class;
    class CharSequence;
    class StringBuffer;
    class Object;
    class String;
  }
  namespace io {
    class Serializable;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class StringBuilder : public ::java::lang::AbstractStringBuilder {
    public:
      enum {
        mid_init$_baea6bf243e2d9b8,
        mid_init$_61978bd96b05672d,
        mid_init$_3e4369e088f8ac83,
        mid_init$_e3e5f5ff373509b3,
        mid_append_b4d1aba12f6e7e2b,
        mid_append_01cde9e88d251d13,
        mid_append_04b37debbc0655aa,
        mid_append_cb8ddcda392e7c1b,
        mid_append_9d91d55f2a82305e,
        mid_append_168607de10608e1d,
        mid_append_4a0bb5446323f928,
        mid_append_4e66a984cfb3cf93,
        mid_append_cbd374c5a0eded6f,
        mid_append_8c51a9825fe3c4c0,
        mid_append_c5ef89cce8c03bf4,
        mid_append_44ddae3de1ff0c2f,
        mid_append_de74f3fcffcec820,
        mid_appendCodePoint_cbd374c5a0eded6f,
        mid_delete_f45aa0d21dc82803,
        mid_deleteCharAt_cbd374c5a0eded6f,
        mid_indexOf_07a398a2298c97a7,
        mid_indexOf_0159111ae701015e,
        mid_insert_f45aa0d21dc82803,
        mid_insert_6c607d6a219801cc,
        mid_insert_e32065a9c4cb36ab,
        mid_insert_90ab4d671e0dba76,
        mid_insert_3637aa91f5036d87,
        mid_insert_5907d812a43b9210,
        mid_insert_8769ea6ff85973f6,
        mid_insert_1414ba3dfb86acf6,
        mid_insert_ab456264186cc784,
        mid_insert_2c6800f320305c85,
        mid_insert_69d40ef90e59170b,
        mid_insert_69145c87f91deb50,
        mid_lastIndexOf_07a398a2298c97a7,
        mid_lastIndexOf_0159111ae701015e,
        mid_replace_3eef8e415be01a58,
        mid_reverse_9128c92a853acc55,
        mid_toString_8cdd42a672015029,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit StringBuilder(jobject obj) : ::java::lang::AbstractStringBuilder(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      StringBuilder(const StringBuilder& obj) : ::java::lang::AbstractStringBuilder(obj) {}

      StringBuilder();
      StringBuilder(const ::java::lang::CharSequence &);
      StringBuilder(const ::java::lang::String &);
      StringBuilder(jint);

      StringBuilder append(const ::java::lang::StringBuffer &) const;
      StringBuilder append(jboolean) const;
      StringBuilder append(jchar) const;
      StringBuilder append(const JArray< jchar > &) const;
      StringBuilder append(const ::java::lang::CharSequence &) const;
      StringBuilder append(const ::java::lang::Object &) const;
      StringBuilder append(const ::java::lang::String &) const;
      StringBuilder append(jfloat) const;
      StringBuilder append(jint) const;
      StringBuilder append(jlong) const;
      StringBuilder append(jdouble) const;
      StringBuilder append(const ::java::lang::CharSequence &, jint, jint) const;
      StringBuilder append(const JArray< jchar > &, jint, jint) const;
      StringBuilder appendCodePoint(jint) const;
      StringBuilder delete$(jint, jint) const;
      StringBuilder deleteCharAt(jint) const;
      jint indexOf(const ::java::lang::String &) const;
      jint indexOf(const ::java::lang::String &, jint) const;
      StringBuilder insert(jint, jint) const;
      StringBuilder insert(jint, jlong) const;
      StringBuilder insert(jint, jfloat) const;
      StringBuilder insert(jint, jdouble) const;
      StringBuilder insert(jint, const ::java::lang::Object &) const;
      StringBuilder insert(jint, const ::java::lang::String &) const;
      StringBuilder insert(jint, const JArray< jchar > &) const;
      StringBuilder insert(jint, const ::java::lang::CharSequence &) const;
      StringBuilder insert(jint, jboolean) const;
      StringBuilder insert(jint, jchar) const;
      StringBuilder insert(jint, const ::java::lang::CharSequence &, jint, jint) const;
      StringBuilder insert(jint, const JArray< jchar > &, jint, jint) const;
      jint lastIndexOf(const ::java::lang::String &) const;
      jint lastIndexOf(const ::java::lang::String &, jint) const;
      StringBuilder replace(jint, jint, const ::java::lang::String &) const;
      StringBuilder reverse() const;
      ::java::lang::String toString() const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyTypeObject PY_TYPE(StringBuilder);

    class t_StringBuilder {
    public:
      PyObject_HEAD
      StringBuilder object;
      static PyObject *wrap_Object(const StringBuilder&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
