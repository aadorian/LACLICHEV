#ifndef java_lang_Long_H
#define java_lang_Long_H

#include "java/lang/Number.h"

namespace java {
  namespace lang {
    class NumberFormatException;
    class Class;
    class Comparable;
    class Object;
    class String;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class Long : public ::java::lang::Number {
    public:
      enum {
        mid_init$_ea7e2607a44304f3,
        mid_init$_3e4369e088f8ac83,
        mid_bitCount_c8dddfb021d16d75,
        mid_byteValue_9714a86531c8152d,
        mid_compare_a542e2215d815875,
        mid_compareTo_1d319e7fda7f3475,
        mid_compareUnsigned_a542e2215d815875,
        mid_decode_2ac0fdbbe6986cb8,
        mid_divideUnsigned_ce1383c9ef21ec64,
        mid_doubleValue_44067586fec56606,
        mid_equals_55f7ed877b4720ef,
        mid_floatValue_388e059cf45fb2f9,
        mid_getLong_2ac0fdbbe6986cb8,
        mid_getLong_5229ef5307445800,
        mid_getLong_4daadfe192fa3a10,
        mid_hashCode_c6ef1683adc87377,
        mid_hashCode_c8dddfb021d16d75,
        mid_highestOneBit_7beee2f6754bb612,
        mid_intValue_c6ef1683adc87377,
        mid_longValue_25efeb8f9279460d,
        mid_lowestOneBit_7beee2f6754bb612,
        mid_max_ce1383c9ef21ec64,
        mid_min_ce1383c9ef21ec64,
        mid_numberOfLeadingZeros_c8dddfb021d16d75,
        mid_numberOfTrailingZeros_c8dddfb021d16d75,
        mid_parseLong_9d541dc47c492f6a,
        mid_parseLong_f81c61c8bebcaa39,
        mid_parseUnsignedLong_9d541dc47c492f6a,
        mid_parseUnsignedLong_f81c61c8bebcaa39,
        mid_remainderUnsigned_ce1383c9ef21ec64,
        mid_reverse_7beee2f6754bb612,
        mid_reverseBytes_7beee2f6754bb612,
        mid_rotateLeft_c6bf8e6391af52c4,
        mid_rotateRight_c6bf8e6391af52c4,
        mid_shortValue_6687947706ee7380,
        mid_signum_c8dddfb021d16d75,
        mid_sum_ce1383c9ef21ec64,
        mid_toBinaryString_00812b845ebcd112,
        mid_toHexString_00812b845ebcd112,
        mid_toOctalString_00812b845ebcd112,
        mid_toString_8cdd42a672015029,
        mid_toString_00812b845ebcd112,
        mid_toString_f53bda20ed617f60,
        mid_toUnsignedString_00812b845ebcd112,
        mid_toUnsignedString_f53bda20ed617f60,
        mid_valueOf_56a2e8f1aacbfc09,
        mid_valueOf_2ac0fdbbe6986cb8,
        mid_valueOf_e953937d021c30c6,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit Long(jobject obj) : ::java::lang::Number(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      Long(const Long& obj) : ::java::lang::Number(obj) {}

      static jint BYTES;
      static jlong MAX_VALUE;
      static jlong MIN_VALUE;
      static jint SIZE;
      static ::java::lang::Class *TYPE;

      Long(jlong);
      Long(const ::java::lang::String &);

      static jint bitCount(jlong);
      jbyte byteValue() const;
      static jint compare(jlong, jlong);
      jint compareTo(const Long &) const;
      static jint compareUnsigned(jlong, jlong);
      static Long decode(const ::java::lang::String &);
      static jlong divideUnsigned(jlong, jlong);
      jdouble doubleValue() const;
      jboolean equals(const ::java::lang::Object &) const;
      jfloat floatValue() const;
      static Long getLong(const ::java::lang::String &);
      static Long getLong(const ::java::lang::String &, const Long &);
      static Long getLong(const ::java::lang::String &, jlong);
      jint hashCode() const;
      static jint hashCode(jlong);
      static jlong highestOneBit(jlong);
      jint intValue() const;
      jlong longValue() const;
      static jlong lowestOneBit(jlong);
      static jlong max$(jlong, jlong);
      static jlong min$(jlong, jlong);
      static jint numberOfLeadingZeros(jlong);
      static jint numberOfTrailingZeros(jlong);
      static jlong parseLong(const ::java::lang::String &);
      static jlong parseLong(const ::java::lang::String &, jint);
      static jlong parseUnsignedLong(const ::java::lang::String &);
      static jlong parseUnsignedLong(const ::java::lang::String &, jint);
      static jlong remainderUnsigned(jlong, jlong);
      static jlong reverse(jlong);
      static jlong reverseBytes(jlong);
      static jlong rotateLeft(jlong, jint);
      static jlong rotateRight(jlong, jint);
      jshort shortValue() const;
      static jint signum(jlong);
      static jlong sum(jlong, jlong);
      static ::java::lang::String toBinaryString(jlong);
      static ::java::lang::String toHexString(jlong);
      static ::java::lang::String toOctalString(jlong);
      ::java::lang::String toString() const;
      static ::java::lang::String toString(jlong);
      static ::java::lang::String toString(jlong, jint);
      static ::java::lang::String toUnsignedString(jlong);
      static ::java::lang::String toUnsignedString(jlong, jint);
      static Long valueOf(jlong);
      static Long valueOf(const ::java::lang::String &);
      static Long valueOf(const ::java::lang::String &, jint);
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyTypeObject PY_TYPE(Long);

    class t_Long {
    public:
      PyObject_HEAD
      Long object;
      static PyObject *wrap_Object(const Long&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
