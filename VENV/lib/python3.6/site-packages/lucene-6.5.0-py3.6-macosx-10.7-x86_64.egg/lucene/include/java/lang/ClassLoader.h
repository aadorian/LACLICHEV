#ifndef java_lang_ClassLoader_H
#define java_lang_ClassLoader_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class Class;
    class ClassNotFoundException;
    class String;
  }
  namespace util {
    class Enumeration;
  }
  namespace io {
    class InputStream;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class ClassLoader : public ::java::lang::Object {
    public:
      enum {
        mid_clearAssertionStatus_baea6bf243e2d9b8,
        mid_getParent_bf93bb41b6fc5978,
        mid_getResourceAsStream_362b09dd28ca2c1f,
        mid_getSystemClassLoader_bf93bb41b6fc5978,
        mid_getSystemResourceAsStream_362b09dd28ca2c1f,
        mid_loadClass_c50c15c91aafec52,
        mid_setClassAssertionStatus_8ac8f953d6e08aa6,
        mid_setDefaultAssertionStatus_787a33a11683567e,
        mid_setPackageAssertionStatus_8ac8f953d6e08aa6,
        mid_loadClass_87a912d0105e4d78,
        mid_getPackage_0742dbcf59eabafd,
        mid_setSigners_b24f19134191060b,
        mid_getClassLoadingLock_4e8b1b15b103338b,
        mid_findClass_c50c15c91aafec52,
        mid_defineClass_fc9533eeb23850f6,
        mid_defineClass_785e55882893cf28,
        mid_defineClass_b16788f9a4713abc,
        mid_defineClass_6244d6694097c755,
        mid_resolveClass_a8af6c4c4e0eabb4,
        mid_findSystemClass_c50c15c91aafec52,
        mid_findLoadedClass_c50c15c91aafec52,
        mid_findResource_f6468e285b74ca10,
        mid_findResources_dcd28c9ac7d39d4e,
        mid_registerAsParallelCapable_cc8de42f0a91785b,
        mid_definePackage_ab76cbecf4304c2a,
        mid_getPackages_e628d0e7049a1079,
        mid_findLibrary_8f17802fec60c02b,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit ClassLoader(jobject obj) : ::java::lang::Object(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      ClassLoader(const ClassLoader& obj) : ::java::lang::Object(obj) {}

      void clearAssertionStatus() const;
      ClassLoader getParent() const;
      ::java::io::InputStream getResourceAsStream(const ::java::lang::String &) const;
      static ClassLoader getSystemClassLoader();
      static ::java::io::InputStream getSystemResourceAsStream(const ::java::lang::String &);
      ::java::lang::Class loadClass(const ::java::lang::String &) const;
      void setClassAssertionStatus(const ::java::lang::String &, jboolean) const;
      void setDefaultAssertionStatus(jboolean) const;
      void setPackageAssertionStatus(const ::java::lang::String &, jboolean) const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyTypeObject PY_TYPE(ClassLoader);

    class t_ClassLoader {
    public:
      PyObject_HEAD
      ClassLoader object;
      static PyObject *wrap_Object(const ClassLoader&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
