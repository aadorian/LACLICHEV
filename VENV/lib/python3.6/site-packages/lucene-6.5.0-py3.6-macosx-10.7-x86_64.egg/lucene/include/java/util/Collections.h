#ifndef java_util_Collections_H
#define java_util_Collections_H

#include "java/lang/Object.h"

namespace java {
  namespace lang {
    class Boolean;
    class Class;
    class Comparable;
  }
  namespace util {
    class Deque;
    class SortedSet;
    class Queue;
    class Collection;
    class Random;
    class Comparator;
    class NavigableSet;
    class NavigableMap;
    class ArrayList;
    class Iterator;
    class Enumeration;
    class Set;
    class ListIterator;
    class List;
    class Map;
    class SortedMap;
  }
}
template<class T> class JArray;

namespace java {
  namespace util {

    class Collections : public ::java::lang::Object {
    public:
      enum {
        mid_addAll_06322a0979217d1b,
        mid_asLifoQueue_486a79c1d9a4ec68,
        mid_binarySearch_41ffda89dcab86e3,
        mid_binarySearch_b589d8784777aac1,
        mid_checkedCollection_d8a6b303de416949,
        mid_checkedList_27e3d9bbbc2f6299,
        mid_checkedMap_e4d755b868633639,
        mid_checkedNavigableMap_8f9a0c89bc7b315f,
        mid_checkedNavigableSet_d6b2fef1afde158a,
        mid_checkedQueue_9961ea45fa35228f,
        mid_checkedSet_322a270c6572b219,
        mid_checkedSortedMap_3ae9c792b6cbe2bd,
        mid_checkedSortedSet_e8c12e8b769f7842,
        mid_copy_00f70e56836a797c,
        mid_disjoint_b473e8bd1557c366,
        mid_emptyEnumeration_802c6e8f52f35e8c,
        mid_emptyIterator_5044241792d27377,
        mid_emptyList_b85e661efb704f64,
        mid_emptyListIterator_36e123a87cb13941,
        mid_emptyMap_f44c49bd487dca3f,
        mid_emptyNavigableMap_f0a43fe748607a8a,
        mid_emptyNavigableSet_ad59027d7e0645f8,
        mid_emptySet_c97555483a81e2c4,
        mid_emptySortedMap_a8a0832a53d0ed44,
        mid_emptySortedSet_30edabcbb0c2df08,
        mid_enumeration_19c5de9d1803cd27,
        mid_fill_2326e48f5e766e67,
        mid_frequency_11e1b41552624807,
        mid_indexOfSubList_48a81fa61eb8ce06,
        mid_lastIndexOfSubList_48a81fa61eb8ce06,
        mid_list_768e22c8badb4a0d,
        mid_max_63d2ea3f1d44c08c,
        mid_max_041f1d5c5ec7ed96,
        mid_min_63d2ea3f1d44c08c,
        mid_min_041f1d5c5ec7ed96,
        mid_nCopies_e9f35f669c5b5a80,
        mid_newSetFromMap_cf6ca1d2d657af2d,
        mid_replaceAll_4d59b58dd29b170c,
        mid_reverse_782ccc8d50499d99,
        mid_reverseOrder_483ee78eecaee500,
        mid_reverseOrder_d58912d9cc9b8369,
        mid_rotate_94daf7f6868ecb96,
        mid_shuffle_782ccc8d50499d99,
        mid_shuffle_c93ce98d89b6c94f,
        mid_singleton_df9d5c3643b0ae0e,
        mid_singletonList_4976d423a3cd8a65,
        mid_singletonMap_f5c887b93879df10,
        mid_sort_782ccc8d50499d99,
        mid_sort_afb3f5180dcc75c9,
        mid_swap_aa7098d9023a69d8,
        mid_synchronizedCollection_eed96ec1509f630e,
        mid_synchronizedList_075fc2cf3101f740,
        mid_synchronizedMap_840e906fba8f03a5,
        mid_synchronizedNavigableMap_1206306934d313ba,
        mid_synchronizedNavigableSet_ac25e82f20e1471e,
        mid_synchronizedSet_157b46002d81ae09,
        mid_synchronizedSortedMap_3cbfcf95c607d48c,
        mid_synchronizedSortedSet_b74640b11cf383f3,
        mid_unmodifiableCollection_eed96ec1509f630e,
        mid_unmodifiableList_075fc2cf3101f740,
        mid_unmodifiableMap_840e906fba8f03a5,
        mid_unmodifiableNavigableMap_1206306934d313ba,
        mid_unmodifiableNavigableSet_ac25e82f20e1471e,
        mid_unmodifiableSet_157b46002d81ae09,
        mid_unmodifiableSortedMap_3cbfcf95c607d48c,
        mid_unmodifiableSortedSet_b74640b11cf383f3,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit Collections(jobject obj) : ::java::lang::Object(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      Collections(const Collections& obj) : ::java::lang::Object(obj) {}

      static ::java::util::List *EMPTY_LIST;
      static ::java::util::Map *EMPTY_MAP;
      static ::java::util::Set *EMPTY_SET;

      static jboolean addAll(const ::java::util::Collection &, const JArray< ::java::lang::Object > &);
      static ::java::util::Queue asLifoQueue(const ::java::util::Deque &);
      static jint binarySearch(const ::java::util::List &, const ::java::lang::Object &);
      static jint binarySearch(const ::java::util::List &, const ::java::lang::Object &, const ::java::util::Comparator &);
      static ::java::util::Collection checkedCollection(const ::java::util::Collection &, const ::java::lang::Class &);
      static ::java::util::List checkedList(const ::java::util::List &, const ::java::lang::Class &);
      static ::java::util::Map checkedMap(const ::java::util::Map &, const ::java::lang::Class &, const ::java::lang::Class &);
      static ::java::util::NavigableMap checkedNavigableMap(const ::java::util::NavigableMap &, const ::java::lang::Class &, const ::java::lang::Class &);
      static ::java::util::NavigableSet checkedNavigableSet(const ::java::util::NavigableSet &, const ::java::lang::Class &);
      static ::java::util::Queue checkedQueue(const ::java::util::Queue &, const ::java::lang::Class &);
      static ::java::util::Set checkedSet(const ::java::util::Set &, const ::java::lang::Class &);
      static ::java::util::SortedMap checkedSortedMap(const ::java::util::SortedMap &, const ::java::lang::Class &, const ::java::lang::Class &);
      static ::java::util::SortedSet checkedSortedSet(const ::java::util::SortedSet &, const ::java::lang::Class &);
      static void copy(const ::java::util::List &, const ::java::util::List &);
      static jboolean disjoint(const ::java::util::Collection &, const ::java::util::Collection &);
      static ::java::util::Enumeration emptyEnumeration();
      static ::java::util::Iterator emptyIterator();
      static ::java::util::List emptyList();
      static ::java::util::ListIterator emptyListIterator();
      static ::java::util::Map emptyMap();
      static ::java::util::NavigableMap emptyNavigableMap();
      static ::java::util::NavigableSet emptyNavigableSet();
      static ::java::util::Set emptySet();
      static ::java::util::SortedMap emptySortedMap();
      static ::java::util::SortedSet emptySortedSet();
      static ::java::util::Enumeration enumeration(const ::java::util::Collection &);
      static void fill(const ::java::util::List &, const ::java::lang::Object &);
      static jint frequency(const ::java::util::Collection &, const ::java::lang::Object &);
      static jint indexOfSubList(const ::java::util::List &, const ::java::util::List &);
      static jint lastIndexOfSubList(const ::java::util::List &, const ::java::util::List &);
      static ::java::util::ArrayList list(const ::java::util::Enumeration &);
      static ::java::lang::Object max$(const ::java::util::Collection &);
      static ::java::lang::Object max$(const ::java::util::Collection &, const ::java::util::Comparator &);
      static ::java::lang::Object min$(const ::java::util::Collection &);
      static ::java::lang::Object min$(const ::java::util::Collection &, const ::java::util::Comparator &);
      static ::java::util::List nCopies(jint, const ::java::lang::Object &);
      static ::java::util::Set newSetFromMap(const ::java::util::Map &);
      static jboolean replaceAll(const ::java::util::List &, const ::java::lang::Object &, const ::java::lang::Object &);
      static void reverse(const ::java::util::List &);
      static ::java::util::Comparator reverseOrder();
      static ::java::util::Comparator reverseOrder(const ::java::util::Comparator &);
      static void rotate(const ::java::util::List &, jint);
      static void shuffle(const ::java::util::List &);
      static void shuffle(const ::java::util::List &, const ::java::util::Random &);
      static ::java::util::Set singleton(const ::java::lang::Object &);
      static ::java::util::List singletonList(const ::java::lang::Object &);
      static ::java::util::Map singletonMap(const ::java::lang::Object &, const ::java::lang::Object &);
      static void sort(const ::java::util::List &);
      static void sort(const ::java::util::List &, const ::java::util::Comparator &);
      static void swap(const ::java::util::List &, jint, jint);
      static ::java::util::Collection synchronizedCollection(const ::java::util::Collection &);
      static ::java::util::List synchronizedList(const ::java::util::List &);
      static ::java::util::Map synchronizedMap(const ::java::util::Map &);
      static ::java::util::NavigableMap synchronizedNavigableMap(const ::java::util::NavigableMap &);
      static ::java::util::NavigableSet synchronizedNavigableSet(const ::java::util::NavigableSet &);
      static ::java::util::Set synchronizedSet(const ::java::util::Set &);
      static ::java::util::SortedMap synchronizedSortedMap(const ::java::util::SortedMap &);
      static ::java::util::SortedSet synchronizedSortedSet(const ::java::util::SortedSet &);
      static ::java::util::Collection unmodifiableCollection(const ::java::util::Collection &);
      static ::java::util::List unmodifiableList(const ::java::util::List &);
      static ::java::util::Map unmodifiableMap(const ::java::util::Map &);
      static ::java::util::NavigableMap unmodifiableNavigableMap(const ::java::util::NavigableMap &);
      static ::java::util::NavigableSet unmodifiableNavigableSet(const ::java::util::NavigableSet &);
      static ::java::util::Set unmodifiableSet(const ::java::util::Set &);
      static ::java::util::SortedMap unmodifiableSortedMap(const ::java::util::SortedMap &);
      static ::java::util::SortedSet unmodifiableSortedSet(const ::java::util::SortedSet &);
    };
  }
}

#include <Python.h>

namespace java {
  namespace util {
    extern PyTypeObject PY_TYPE(Collections);

    class t_Collections {
    public:
      PyObject_HEAD
      Collections object;
      static PyObject *wrap_Object(const Collections&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
