#ifndef java_lang_StringBuffer_H
#define java_lang_StringBuffer_H

#include "java/lang/AbstractStringBuilder.h"

namespace java {
  namespace lang {
    class Class;
    class CharSequence;
    class Object;
    class String;
  }
  namespace io {
    class Serializable;
  }
}
template<class T> class JArray;

namespace java {
  namespace lang {

    class StringBuffer : public ::java::lang::AbstractStringBuilder {
    public:
      enum {
        mid_init$_baea6bf243e2d9b8,
        mid_init$_61978bd96b05672d,
        mid_init$_3e4369e088f8ac83,
        mid_init$_e3e5f5ff373509b3,
        mid_append_1037ee6778a9ba67,
        mid_append_43e63bb283e2e158,
        mid_append_4eaf3013cd29a3ea,
        mid_append_d111c37fc08e720a,
        mid_append_50327ae15a8acfc1,
        mid_append_6e919f99b622ec6c,
        mid_append_b8f4e89064254d4b,
        mid_append_3f558d6f7e6c3425,
        mid_append_6710c35e23fefb97,
        mid_append_5d851a2e08229a0f,
        mid_append_3acaa903a8cb61c3,
        mid_append_75e9bc792c627dcc,
        mid_append_e5ff0f3aac44a944,
        mid_appendCodePoint_43e63bb283e2e158,
        mid_capacity_c6ef1683adc87377,
        mid_charAt_d9ac27cd414dde64,
        mid_codePointAt_eb4f2d82869c338b,
        mid_codePointBefore_eb4f2d82869c338b,
        mid_codePointCount_9ebb972a63d3bb3c,
        mid_delete_79010bfe047a4ccb,
        mid_deleteCharAt_43e63bb283e2e158,
        mid_ensureCapacity_e3e5f5ff373509b3,
        mid_getChars_9fc2bdd16efcaf84,
        mid_indexOf_07a398a2298c97a7,
        mid_indexOf_0159111ae701015e,
        mid_insert_b01bd6dc1e68f882,
        mid_insert_a8080c7bb9b29084,
        mid_insert_c3078bcb98e550d1,
        mid_insert_79010bfe047a4ccb,
        mid_insert_c857aab06608ba8f,
        mid_insert_fedb17a611ed1fab,
        mid_insert_473e56b9ca1e527f,
        mid_insert_9af2bb2541221273,
        mid_insert_890f149e3883f4f8,
        mid_insert_5788e0070e88bbb4,
        mid_insert_a79e9d96ec431a4f,
        mid_insert_17886d810ed6c28f,
        mid_lastIndexOf_07a398a2298c97a7,
        mid_lastIndexOf_0159111ae701015e,
        mid_length_c6ef1683adc87377,
        mid_offsetByCodePoints_9ebb972a63d3bb3c,
        mid_replace_9482cb6da57db248,
        mid_reverse_8f6fb7cd45a6d216,
        mid_setCharAt_31e26039b3272f80,
        mid_setLength_e3e5f5ff373509b3,
        mid_subSequence_27c48fefeb6bdcd7,
        mid_substring_e5ab4ec225f780e9,
        mid_substring_2f188a32ac95e8d9,
        mid_toString_8cdd42a672015029,
        mid_trimToSize_baea6bf243e2d9b8,
        max_mid
      };

      static ::java::lang::Class *class$;
      static jmethodID *mids$;
      static bool live$;
      static jclass initializeClass(bool);

      explicit StringBuffer(jobject obj) : ::java::lang::AbstractStringBuilder(obj) {
        if (obj != NULL)
          env->getClass(initializeClass);
      }
      StringBuffer(const StringBuffer& obj) : ::java::lang::AbstractStringBuilder(obj) {}

      StringBuffer();
      StringBuffer(const ::java::lang::CharSequence &);
      StringBuffer(const ::java::lang::String &);
      StringBuffer(jint);

      StringBuffer append(jchar) const;
      StringBuffer append(jint) const;
      StringBuffer append(jlong) const;
      StringBuffer append(jdouble) const;
      StringBuffer append(const ::java::lang::Object &) const;
      StringBuffer append(const ::java::lang::String &) const;
      StringBuffer append(const StringBuffer &) const;
      StringBuffer append(jfloat) const;
      StringBuffer append(const JArray< jchar > &) const;
      StringBuffer append(jboolean) const;
      StringBuffer append(const ::java::lang::CharSequence &) const;
      StringBuffer append(const ::java::lang::CharSequence &, jint, jint) const;
      StringBuffer append(const JArray< jchar > &, jint, jint) const;
      StringBuffer appendCodePoint(jint) const;
      jint capacity() const;
      jchar charAt(jint) const;
      jint codePointAt(jint) const;
      jint codePointBefore(jint) const;
      jint codePointCount(jint, jint) const;
      StringBuffer delete$(jint, jint) const;
      StringBuffer deleteCharAt(jint) const;
      void ensureCapacity(jint) const;
      void getChars(jint, jint, const JArray< jchar > &, jint) const;
      jint indexOf(const ::java::lang::String &) const;
      jint indexOf(const ::java::lang::String &, jint) const;
      StringBuffer insert(jint, jlong) const;
      StringBuffer insert(jint, jboolean) const;
      StringBuffer insert(jint, jchar) const;
      StringBuffer insert(jint, jint) const;
      StringBuffer insert(jint, jfloat) const;
      StringBuffer insert(jint, jdouble) const;
      StringBuffer insert(jint, const ::java::lang::Object &) const;
      StringBuffer insert(jint, const ::java::lang::String &) const;
      StringBuffer insert(jint, const JArray< jchar > &) const;
      StringBuffer insert(jint, const ::java::lang::CharSequence &) const;
      StringBuffer insert(jint, const JArray< jchar > &, jint, jint) const;
      StringBuffer insert(jint, const ::java::lang::CharSequence &, jint, jint) const;
      jint lastIndexOf(const ::java::lang::String &) const;
      jint lastIndexOf(const ::java::lang::String &, jint) const;
      jint length() const;
      jint offsetByCodePoints(jint, jint) const;
      StringBuffer replace(jint, jint, const ::java::lang::String &) const;
      StringBuffer reverse() const;
      void setCharAt(jint, jchar) const;
      void setLength(jint) const;
      ::java::lang::CharSequence subSequence(jint, jint) const;
      ::java::lang::String substring(jint) const;
      ::java::lang::String substring(jint, jint) const;
      ::java::lang::String toString() const;
      void trimToSize() const;
    };
  }
}

#include <Python.h>

namespace java {
  namespace lang {
    extern PyTypeObject PY_TYPE(StringBuffer);

    class t_StringBuffer {
    public:
      PyObject_HEAD
      StringBuffer object;
      static PyObject *wrap_Object(const StringBuffer&);
      static PyObject *wrap_jobject(const jobject&);
      static void install(PyObject *module);
      static void initialize(PyObject *module);
    };
  }
}

#endif
