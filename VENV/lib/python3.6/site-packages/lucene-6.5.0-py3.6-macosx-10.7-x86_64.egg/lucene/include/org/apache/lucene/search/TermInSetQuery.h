#ifndef org_apache_lucene_search_TermInSetQuery_H
#define org_apache_lucene_search_TermInSetQuery_H

#include "org/apache/lucene/search/Query.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class IndexReader;
        class PrefixCodedTerms;
      }
      namespace search {
        class IndexSearcher;
        class Weight;
      }
      namespace util {
        class BytesRef;
        class Accountable;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
    class Object;
    class String;
  }
  namespace util {
    class Collection;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {

        class TermInSetQuery : public ::org::apache::lucene::search::Query {
        public:
          enum {
            mid_init$_60da21786f4c22bd,
            mid_init$_fa85cbbef40c993a,
            mid_createWeight_f1c861c30d40f2e7,
            mid_equals_55f7ed877b4720ef,
            mid_getChildResources_fd35991ad7af5f7b,
            mid_getTermData_2140a02baf68afd0,
            mid_hashCode_c6ef1683adc87377,
            mid_ramBytesUsed_25efeb8f9279460d,
            mid_rewrite_147993ee7f1a7344,
            mid_toString_8f17802fec60c02b,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit TermInSetQuery(jobject obj) : ::org::apache::lucene::search::Query(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          TermInSetQuery(const TermInSetQuery& obj) : ::org::apache::lucene::search::Query(obj) {}

          TermInSetQuery(const ::java::lang::String &, const ::java::util::Collection &);
          TermInSetQuery(const ::java::lang::String &, const JArray< ::org::apache::lucene::util::BytesRef > &);

          ::org::apache::lucene::search::Weight createWeight(const ::org::apache::lucene::search::IndexSearcher &, jboolean) const;
          jboolean equals(const ::java::lang::Object &) const;
          ::java::util::Collection getChildResources() const;
          ::org::apache::lucene::index::PrefixCodedTerms getTermData() const;
          jint hashCode() const;
          jlong ramBytesUsed() const;
          ::org::apache::lucene::search::Query rewrite(const ::org::apache::lucene::index::IndexReader &) const;
          ::java::lang::String toString(const ::java::lang::String &) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        extern PyTypeObject PY_TYPE(TermInSetQuery);

        class t_TermInSetQuery {
        public:
          PyObject_HEAD
          TermInSetQuery object;
          static PyObject *wrap_Object(const TermInSetQuery&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
