#ifndef org_apache_lucene_codecs_lucene62_Lucene62Codec_H
#define org_apache_lucene_codecs_lucene62_Lucene62Codec_H

#include "org/apache/lucene/codecs/Codec.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        class NormsFormat;
        class PointsFormat;
        class FieldInfosFormat;
        class CompoundFormat;
        class PostingsFormat;
        namespace lucene50 {
          class Lucene50StoredFieldsFormat$Mode;
        }
        class LiveDocsFormat;
        class SegmentInfoFormat;
        class DocValuesFormat;
        class TermVectorsFormat;
        class StoredFieldsFormat;
      }
    }
  }
}
namespace java {
  namespace lang {
    class Class;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene62 {

          class Lucene62Codec : public ::org::apache::lucene::codecs::Codec {
          public:
            enum {
              mid_init$_baea6bf243e2d9b8,
              mid_init$_a48fb11689cdee2e,
              mid_compoundFormat_5542b0d8558b4fdc,
              mid_docValuesFormat_e3334e8c068c3753,
              mid_fieldInfosFormat_5e0959d67b250bc8,
              mid_getDocValuesFormatForField_8db1e95234d1533e,
              mid_getPostingsFormatForField_11a8907a9a079e23,
              mid_liveDocsFormat_414b89247b33558d,
              mid_normsFormat_7046c176d667d69e,
              mid_pointsFormat_df39629ba3b5f7eb,
              mid_postingsFormat_814376bb12ac29b3,
              mid_segmentInfoFormat_bac52b06c791ca68,
              mid_storedFieldsFormat_6b113dd71c0655a8,
              mid_termVectorsFormat_d59aed36194b855a,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit Lucene62Codec(jobject obj) : ::org::apache::lucene::codecs::Codec(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            Lucene62Codec(const Lucene62Codec& obj) : ::org::apache::lucene::codecs::Codec(obj) {}

            Lucene62Codec();
            Lucene62Codec(const ::org::apache::lucene::codecs::lucene50::Lucene50StoredFieldsFormat$Mode &);

            ::org::apache::lucene::codecs::CompoundFormat compoundFormat() const;
            ::org::apache::lucene::codecs::DocValuesFormat docValuesFormat() const;
            ::org::apache::lucene::codecs::FieldInfosFormat fieldInfosFormat() const;
            ::org::apache::lucene::codecs::DocValuesFormat getDocValuesFormatForField(const ::java::lang::String &) const;
            ::org::apache::lucene::codecs::PostingsFormat getPostingsFormatForField(const ::java::lang::String &) const;
            ::org::apache::lucene::codecs::LiveDocsFormat liveDocsFormat() const;
            ::org::apache::lucene::codecs::NormsFormat normsFormat() const;
            ::org::apache::lucene::codecs::PointsFormat pointsFormat() const;
            ::org::apache::lucene::codecs::PostingsFormat postingsFormat() const;
            ::org::apache::lucene::codecs::SegmentInfoFormat segmentInfoFormat() const;
            ::org::apache::lucene::codecs::StoredFieldsFormat storedFieldsFormat() const;
            ::org::apache::lucene::codecs::TermVectorsFormat termVectorsFormat() const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene62 {
          extern PyTypeObject PY_TYPE(Lucene62Codec);

          class t_Lucene62Codec {
          public:
            PyObject_HEAD
            Lucene62Codec object;
            static PyObject *wrap_Object(const Lucene62Codec&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
