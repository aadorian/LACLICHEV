#ifndef org_apache_lucene_search_DocValuesRangeQuery_H
#define org_apache_lucene_search_DocValuesRangeQuery_H

#include "org/apache/lucene/search/Query.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class IndexReader;
      }
      namespace search {
        class IndexSearcher;
        class Weight;
      }
      namespace util {
        class BytesRef;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Long;
    class Class;
    class Object;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {

        class DocValuesRangeQuery : public ::org::apache::lucene::search::Query {
        public:
          enum {
            mid_createWeight_f1c861c30d40f2e7,
            mid_equals_55f7ed877b4720ef,
            mid_getField_8cdd42a672015029,
            mid_getLowerVal_fcd621d44e119d75,
            mid_getUpperVal_fcd621d44e119d75,
            mid_hashCode_c6ef1683adc87377,
            mid_isIncludeLower_cc8de42f0a91785b,
            mid_isIncludeUpper_cc8de42f0a91785b,
            mid_newBytesRefRange_102c2a062095720b,
            mid_newLongRange_27387b94b426547d,
            mid_rewrite_147993ee7f1a7344,
            mid_toString_8f17802fec60c02b,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit DocValuesRangeQuery(jobject obj) : ::org::apache::lucene::search::Query(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          DocValuesRangeQuery(const DocValuesRangeQuery& obj) : ::org::apache::lucene::search::Query(obj) {}

          ::org::apache::lucene::search::Weight createWeight(const ::org::apache::lucene::search::IndexSearcher &, jboolean) const;
          jboolean equals(const ::java::lang::Object &) const;
          ::java::lang::String getField() const;
          ::java::lang::Object getLowerVal() const;
          ::java::lang::Object getUpperVal() const;
          jint hashCode() const;
          jboolean isIncludeLower() const;
          jboolean isIncludeUpper() const;
          static ::org::apache::lucene::search::Query newBytesRefRange(const ::java::lang::String &, const ::org::apache::lucene::util::BytesRef &, const ::org::apache::lucene::util::BytesRef &, jboolean, jboolean);
          static ::org::apache::lucene::search::Query newLongRange(const ::java::lang::String &, const ::java::lang::Long &, const ::java::lang::Long &, jboolean, jboolean);
          ::org::apache::lucene::search::Query rewrite(const ::org::apache::lucene::index::IndexReader &) const;
          ::java::lang::String toString(const ::java::lang::String &) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        extern PyTypeObject PY_TYPE(DocValuesRangeQuery);

        class t_DocValuesRangeQuery {
        public:
          PyObject_HEAD
          DocValuesRangeQuery object;
          static PyObject *wrap_Object(const DocValuesRangeQuery&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
