#ifndef org_apache_lucene_codecs_lucene50_Lucene50PostingsReader_H
#define org_apache_lucene_codecs_lucene50_Lucene50PostingsReader_H

#include "org/apache/lucene/codecs/PostingsReaderBase.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class PostingsEnum;
        class FieldInfo;
        class SegmentReadState;
      }
      namespace codecs {
        class BlockTermState;
      }
      namespace store {
        class IndexInput;
        class DataInput;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene50 {

          class Lucene50PostingsReader : public ::org::apache::lucene::codecs::PostingsReaderBase {
          public:
            enum {
              mid_init$_3fa141f95ddd640d,
              mid_checkIntegrity_baea6bf243e2d9b8,
              mid_close_baea6bf243e2d9b8,
              mid_decodeTerm_a1f27f60b662f400,
              mid_init_f19fddda6bb81e47,
              mid_newTermState_d3d8521fb474b073,
              mid_postings_12862a56afb67515,
              mid_ramBytesUsed_25efeb8f9279460d,
              mid_toString_8cdd42a672015029,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit Lucene50PostingsReader(jobject obj) : ::org::apache::lucene::codecs::PostingsReaderBase(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            Lucene50PostingsReader(const Lucene50PostingsReader& obj) : ::org::apache::lucene::codecs::PostingsReaderBase(obj) {}

            Lucene50PostingsReader(const ::org::apache::lucene::index::SegmentReadState &);

            void checkIntegrity() const;
            void close() const;
            void decodeTerm(const JArray< jlong > &, const ::org::apache::lucene::store::DataInput &, const ::org::apache::lucene::index::FieldInfo &, const ::org::apache::lucene::codecs::BlockTermState &, jboolean) const;
            void init(const ::org::apache::lucene::store::IndexInput &, const ::org::apache::lucene::index::SegmentReadState &) const;
            ::org::apache::lucene::codecs::BlockTermState newTermState() const;
            ::org::apache::lucene::index::PostingsEnum postings(const ::org::apache::lucene::index::FieldInfo &, const ::org::apache::lucene::codecs::BlockTermState &, const ::org::apache::lucene::index::PostingsEnum &, jint) const;
            jlong ramBytesUsed() const;
            ::java::lang::String toString() const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene50 {
          extern PyTypeObject PY_TYPE(Lucene50PostingsReader);

          class t_Lucene50PostingsReader {
          public:
            PyObject_HEAD
            Lucene50PostingsReader object;
            static PyObject *wrap_Object(const Lucene50PostingsReader&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
