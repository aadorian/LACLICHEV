#ifndef org_apache_lucene_index_FilterCodecReader_H
#define org_apache_lucene_index_FilterCodecReader_H

#include "org/apache/lucene/index/CodecReader.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class Bits;
        class Accountable;
      }
      namespace codecs {
        class TermVectorsReader;
        class StoredFieldsReader;
        class FieldsProducer;
        class PointsReader;
        class DocValuesProducer;
        class NormsProducer;
      }
      namespace index {
        class LeafReader$CoreClosedListener;
        class PointValues;
        class FieldInfos;
      }
      namespace search {
        class Sort;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
  }
  namespace util {
    class Collection;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {

        class FilterCodecReader : public ::org::apache::lucene::index::CodecReader {
        public:
          enum {
            mid_init$_0802b227d6657028,
            mid_addCoreClosedListener_69791dfb6f04a463,
            mid_checkIntegrity_baea6bf243e2d9b8,
            mid_getChildResources_fd35991ad7af5f7b,
            mid_getDocValuesReader_5602dafc0eafb48c,
            mid_getFieldInfos_8232e33df9c361b7,
            mid_getFieldsReader_81bd7454d79638b4,
            mid_getIndexSort_fca1b18e8c9c08f9,
            mid_getLiveDocs_6e67886a7b35b563,
            mid_getNormsReader_28af9ce9aac401ec,
            mid_getPointValues_f96bee5d5724a130,
            mid_getPointsReader_7644d6b50e2c380e,
            mid_getPostingsReader_744e6abfc408dd83,
            mid_getTermVectorsReader_28056f01d6575789,
            mid_maxDoc_c6ef1683adc87377,
            mid_numDocs_c6ef1683adc87377,
            mid_ramBytesUsed_25efeb8f9279460d,
            mid_removeCoreClosedListener_69791dfb6f04a463,
            mid_doClose_baea6bf243e2d9b8,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit FilterCodecReader(jobject obj) : ::org::apache::lucene::index::CodecReader(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          FilterCodecReader(const FilterCodecReader& obj) : ::org::apache::lucene::index::CodecReader(obj) {}

          FilterCodecReader(const ::org::apache::lucene::index::CodecReader &);

          void addCoreClosedListener(const ::org::apache::lucene::index::LeafReader$CoreClosedListener &) const;
          void checkIntegrity() const;
          ::java::util::Collection getChildResources() const;
          ::org::apache::lucene::codecs::DocValuesProducer getDocValuesReader() const;
          ::org::apache::lucene::index::FieldInfos getFieldInfos() const;
          ::org::apache::lucene::codecs::StoredFieldsReader getFieldsReader() const;
          ::org::apache::lucene::search::Sort getIndexSort() const;
          ::org::apache::lucene::util::Bits getLiveDocs() const;
          ::org::apache::lucene::codecs::NormsProducer getNormsReader() const;
          ::org::apache::lucene::index::PointValues getPointValues() const;
          ::org::apache::lucene::codecs::PointsReader getPointsReader() const;
          ::org::apache::lucene::codecs::FieldsProducer getPostingsReader() const;
          ::org::apache::lucene::codecs::TermVectorsReader getTermVectorsReader() const;
          jint maxDoc() const;
          jint numDocs() const;
          jlong ramBytesUsed() const;
          void removeCoreClosedListener(const ::org::apache::lucene::index::LeafReader$CoreClosedListener &) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        extern PyTypeObject PY_TYPE(FilterCodecReader);

        class t_FilterCodecReader {
        public:
          PyObject_HEAD
          FilterCodecReader object;
          static PyObject *wrap_Object(const FilterCodecReader&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
