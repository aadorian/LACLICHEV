#ifndef org_apache_lucene_search_suggest_analyzing_AnalyzingInfixSuggester_H
#define org_apache_lucene_search_suggest_analyzing_AnalyzingInfixSuggester_H

#include "org/apache/lucene/search/suggest/Lookup.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          class InputIterator;
          class Lookup$LookupResult;
        }
        class BooleanClause$Occur;
        class BooleanQuery;
        class BooleanQuery$Builder;
      }
      namespace store {
        class Directory;
        class DataOutput;
        class DataInput;
      }
      namespace analysis {
        class Analyzer;
      }
      namespace util {
        class BytesRef;
        class Accountable;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
    class Closeable;
  }
  namespace lang {
    class Class;
    class CharSequence;
  }
  namespace util {
    class Collection;
    class Set;
    class Map;
    class List;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace analyzing {

            class AnalyzingInfixSuggester : public ::org::apache::lucene::search::suggest::Lookup {
            public:
              enum {
                mid_init$_f4622fe7bc77d29a,
                mid_init$_16b47b015eb5a760,
                mid_init$_ffdc7c0299f23289,
                mid_init$_1eea80d921c9e169,
                mid_add_8915eb9612351148,
                mid_addContextToQuery_a08d99cbdfe23576,
                mid_build_e8d9105030aa2b0f,
                mid_close_baea6bf243e2d9b8,
                mid_commit_baea6bf243e2d9b8,
                mid_getChildResources_fd35991ad7af5f7b,
                mid_getCount_25efeb8f9279460d,
                mid_load_420a9c2c56cb4cc4,
                mid_lookup_afd8a54a50860951,
                mid_lookup_229c5874b8bc404d,
                mid_lookup_6a4adf15c5bad206,
                mid_lookup_6fc708bf83eb377e,
                mid_lookup_2cdce32aff44d99f,
                mid_ramBytesUsed_25efeb8f9279460d,
                mid_refresh_baea6bf243e2d9b8,
                mid_store_f2aa7c4773b19c43,
                mid_update_8915eb9612351148,
                mid_getDirectory_5fdbfe25b51cb64a,
                mid_highlight_e914aba491c12dc4,
                mid_getIndexWriterConfig_752d78a072e760fc,
                mid_getTextFieldType_5f183d77697c45ab,
                mid_getLastTokenQuery_104ce8fe998ef1d6,
                mid_createResults_d8d35e96436fea66,
                mid_finishQuery_ee202ac28cc6c910,
                mid_addNonMatch_eebf689098d013f1,
                mid_addWholeMatch_bf37916c213e3737,
                mid_addPrefixMatch_9784c0ed9f86fd3d,
                max_mid
              };

              static ::java::lang::Class *class$;
              static jmethodID *mids$;
              static bool live$;
              static jclass initializeClass(bool);

              explicit AnalyzingInfixSuggester(jobject obj) : ::org::apache::lucene::search::suggest::Lookup(obj) {
                if (obj != NULL)
                  env->getClass(initializeClass);
              }
              AnalyzingInfixSuggester(const AnalyzingInfixSuggester& obj) : ::org::apache::lucene::search::suggest::Lookup(obj) {}

              static jboolean DEFAULT_ALL_TERMS_REQUIRED;
              static jboolean DEFAULT_HIGHLIGHT;
              static jint DEFAULT_MIN_PREFIX_CHARS;

              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &);
              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &, const ::org::apache::lucene::analysis::Analyzer &, jint, jboolean);
              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &, const ::org::apache::lucene::analysis::Analyzer &, jint, jboolean, jboolean, jboolean);
              AnalyzingInfixSuggester(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::analysis::Analyzer &, const ::org::apache::lucene::analysis::Analyzer &, jint, jboolean, jboolean, jboolean, jboolean);

              void add(const ::org::apache::lucene::util::BytesRef &, const ::java::util::Set &, jlong, const ::org::apache::lucene::util::BytesRef &) const;
              void addContextToQuery(const ::org::apache::lucene::search::BooleanQuery$Builder &, const ::org::apache::lucene::util::BytesRef &, const ::org::apache::lucene::search::BooleanClause$Occur &) const;
              void build(const ::org::apache::lucene::search::suggest::InputIterator &) const;
              void close() const;
              void commit() const;
              ::java::util::Collection getChildResources() const;
              jlong getCount() const;
              jboolean load(const ::org::apache::lucene::store::DataInput &) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::java::util::Set &, jboolean, jint) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, jint, jboolean, jboolean) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::java::util::Set &, jint, jboolean, jboolean) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::java::util::Map &, jint, jboolean, jboolean) const;
              ::java::util::List lookup(const ::java::lang::CharSequence &, const ::org::apache::lucene::search::BooleanQuery &, jint, jboolean, jboolean) const;
              jlong ramBytesUsed() const;
              void refresh() const;
              jboolean store(const ::org::apache::lucene::store::DataOutput &) const;
              void update(const ::org::apache::lucene::util::BytesRef &, const ::java::util::Set &, jlong, const ::org::apache::lucene::util::BytesRef &) const;
            };
          }
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace analyzing {
            extern PyTypeObject PY_TYPE(AnalyzingInfixSuggester);

            class t_AnalyzingInfixSuggester {
            public:
              PyObject_HEAD
              AnalyzingInfixSuggester object;
              static PyObject *wrap_Object(const AnalyzingInfixSuggester&);
              static PyObject *wrap_jobject(const jobject&);
              static void install(PyObject *module);
              static void initialize(PyObject *module);
            };
          }
        }
      }
    }
  }
}

#endif
