#ifndef org_apache_lucene_util_bkd_BKDWriter_H
#define org_apache_lucene_util_bkd_BKDWriter_H

#include "java/lang/Object.h"

namespace java {
  namespace io {
    class IOException;
    class Closeable;
  }
  namespace lang {
    class Class;
    class String;
  }
  namespace util {
    class List;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        namespace bkd {
          class BKDReader;
        }
      }
      namespace codecs {
        class MutablePointsReader;
      }
      namespace store {
        class Directory;
        class IndexOutput;
      }
      namespace index {
        class MergeState$DocMap;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        namespace bkd {

          class BKDWriter : public ::java::lang::Object {
          public:
            enum {
              mid_init$_aed9a892d8c4dd66,
              mid_add_b0c16edd505e0f11,
              mid_close_baea6bf243e2d9b8,
              mid_finish_2c0bec3a3337d9ab,
              mid_getPointCount_25efeb8f9279460d,
              mid_merge_daebfb8ff27247ef,
              mid_verifyParams_bcaae4359b32ee37,
              mid_writeField_e6ee329477fa0237,
              mid_split_fef8c6e74d026764,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit BKDWriter(jobject obj) : ::java::lang::Object(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            BKDWriter(const BKDWriter& obj) : ::java::lang::Object(obj) {}

            static ::java::lang::String *CODEC_NAME;
            static jfloat DEFAULT_MAX_MB_SORT_IN_HEAP;
            static jint DEFAULT_MAX_POINTS_IN_LEAF_NODE;
            static jint MAX_DIMS;
            static jint VERSION_COMPRESSED_DOC_IDS;
            static jint VERSION_COMPRESSED_VALUES;
            static jint VERSION_CURRENT;
            static jint VERSION_IMPLICIT_SPLIT_DIM_1D;
            static jint VERSION_PACKED_INDEX;
            static jint VERSION_START;

            BKDWriter(jint, const ::org::apache::lucene::store::Directory &, const ::java::lang::String &, jint, jint, jint, jdouble, jlong, jboolean);

            void add(const JArray< jbyte > &, jint) const;
            void close() const;
            jlong finish(const ::org::apache::lucene::store::IndexOutput &) const;
            jlong getPointCount() const;
            jlong merge(const ::org::apache::lucene::store::IndexOutput &, const ::java::util::List &, const ::java::util::List &) const;
            static void verifyParams(jint, jint, jdouble, jlong);
            jlong writeField(const ::org::apache::lucene::store::IndexOutput &, const ::java::lang::String &, const ::org::apache::lucene::codecs::MutablePointsReader &) const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        namespace bkd {
          extern PyTypeObject PY_TYPE(BKDWriter);

          class t_BKDWriter {
          public:
            PyObject_HEAD
            BKDWriter object;
            static PyObject *wrap_Object(const BKDWriter&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
