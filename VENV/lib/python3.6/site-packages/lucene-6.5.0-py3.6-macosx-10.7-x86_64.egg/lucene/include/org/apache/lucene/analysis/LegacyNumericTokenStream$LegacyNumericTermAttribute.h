#ifndef org_apache_lucene_analysis_LegacyNumericTokenStream$LegacyNumericTermAttribute_H
#define org_apache_lucene_analysis_LegacyNumericTokenStream$LegacyNumericTermAttribute_H

#include "org/apache/lucene/util/Attribute.h"

namespace java {
  namespace lang {
    class Class;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {

        class LegacyNumericTokenStream$LegacyNumericTermAttribute : public ::org::apache::lucene::util::Attribute {
        public:
          enum {
            mid_getRawValue_25efeb8f9279460d,
            mid_getShift_c6ef1683adc87377,
            mid_getValueSize_c6ef1683adc87377,
            mid_incShift_c6ef1683adc87377,
            mid_init_fdf6b95351c41ed0,
            mid_setShift_e3e5f5ff373509b3,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit LegacyNumericTokenStream$LegacyNumericTermAttribute(jobject obj) : ::org::apache::lucene::util::Attribute(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          LegacyNumericTokenStream$LegacyNumericTermAttribute(const LegacyNumericTokenStream$LegacyNumericTermAttribute& obj) : ::org::apache::lucene::util::Attribute(obj) {}

          jlong getRawValue() const;
          jint getShift() const;
          jint getValueSize() const;
          jint incShift() const;
          void init(jlong, jint, jint, jint) const;
          void setShift(jint) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {
        extern PyTypeObject PY_TYPE(LegacyNumericTokenStream$LegacyNumericTermAttribute);

        class t_LegacyNumericTokenStream$LegacyNumericTermAttribute {
        public:
          PyObject_HEAD
          LegacyNumericTokenStream$LegacyNumericTermAttribute object;
          static PyObject *wrap_Object(const LegacyNumericTokenStream$LegacyNumericTermAttribute&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
