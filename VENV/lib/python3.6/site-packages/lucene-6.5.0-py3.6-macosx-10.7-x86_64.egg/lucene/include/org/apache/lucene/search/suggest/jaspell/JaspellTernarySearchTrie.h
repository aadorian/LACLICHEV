#ifndef org_apache_lucene_search_suggest_jaspell_JaspellTernarySearchTrie_H
#define org_apache_lucene_search_suggest_jaspell_JaspellTernarySearchTrie_H

#include "java/lang/Object.h"

namespace java {
  namespace util {
    class Locale;
    class List;
  }
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
    class CharSequence;
    class Float;
    class String;
  }
  namespace nio {
    namespace file {
      class Path;
    }
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class Accountable;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace jaspell {

            class JaspellTernarySearchTrie : public ::java::lang::Object {
            public:
              enum {
                mid_init$_baea6bf243e2d9b8,
                mid_init$_cde5c34f3ed3eca5,
                mid_init$_365356ebcbbd4471,
                mid_init$_bbfd3313ae3a1790,
                mid_get_66330907689924a4,
                mid_getAndIncrement_47cf6efdc9017efd,
                mid_matchAlmost_76327e4aa6cc89ae,
                mid_matchAlmost_9085a25a9458b706,
                mid_matchPrefix_76327e4aa6cc89ae,
                mid_matchPrefix_9085a25a9458b706,
                mid_numDataNodes_c6ef1683adc87377,
                mid_numNodes_c6ef1683adc87377,
                mid_put_a13a9432a0fcdee1,
                mid_ramBytesUsed_25efeb8f9279460d,
                mid_remove_3e4369e088f8ac83,
                mid_setMatchAlmostDiff_e3e5f5ff373509b3,
                mid_setNumReturnValues_e3e5f5ff373509b3,
                mid_getKey_ca846507020ab9cb,
                mid_getNode_5d2fc25282d247df,
                mid_getOrCreateNode_f5d99372211a75fd,
                mid_numDataNodes_43b9d041a2e43bc4,
                mid_numNodes_43b9d041a2e43bc4,
                mid_sortKeys_6c5362491c6ca766,
                max_mid
              };

              static ::java::lang::Class *class$;
              static jmethodID *mids$;
              static bool live$;
              static jclass initializeClass(bool);

              explicit JaspellTernarySearchTrie(jobject obj) : ::java::lang::Object(obj) {
                if (obj != NULL)
                  env->getClass(initializeClass);
              }
              JaspellTernarySearchTrie(const JaspellTernarySearchTrie& obj) : ::java::lang::Object(obj) {}

              JaspellTernarySearchTrie();
              JaspellTernarySearchTrie(const ::java::nio::file::Path &);
              JaspellTernarySearchTrie(const ::java::util::Locale &);
              JaspellTernarySearchTrie(const ::java::nio::file::Path &, jboolean);

              ::java::lang::Object get(const ::java::lang::CharSequence &) const;
              ::java::lang::Float getAndIncrement(const ::java::lang::String &) const;
              ::java::util::List matchAlmost(const ::java::lang::String &) const;
              ::java::util::List matchAlmost(const ::java::lang::CharSequence &, jint) const;
              ::java::util::List matchPrefix(const ::java::lang::String &) const;
              ::java::util::List matchPrefix(const ::java::lang::CharSequence &, jint) const;
              jint numDataNodes() const;
              jint numNodes() const;
              void put(const ::java::lang::CharSequence &, const ::java::lang::Object &) const;
              jlong ramBytesUsed() const;
              void remove(const ::java::lang::String &) const;
              void setMatchAlmostDiff(jint) const;
              void setNumReturnValues(jint) const;
            };
          }
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace suggest {
          namespace jaspell {
            extern PyTypeObject PY_TYPE(JaspellTernarySearchTrie);

            class t_JaspellTernarySearchTrie {
            public:
              PyObject_HEAD
              JaspellTernarySearchTrie object;
              static PyObject *wrap_Object(const JaspellTernarySearchTrie&);
              static PyObject *wrap_jobject(const jobject&);
              static void install(PyObject *module);
              static void initialize(PyObject *module);
            };
          }
        }
      }
    }
  }
}

#endif
