#ifndef org_apache_lucene_store_FSDirectory_H
#define org_apache_lucene_store_FSDirectory_H

#include "org/apache/lucene/store/BaseDirectory.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
    class String;
  }
  namespace util {
    class Collection;
  }
  namespace nio {
    namespace file {
      class Path;
    }
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        class IOContext;
        class LockFactory;
        class IndexOutput;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {

        class FSDirectory : public ::org::apache::lucene::store::BaseDirectory {
        public:
          enum {
            mid_checkPendingDeletions_cc8de42f0a91785b,
            mid_close_baea6bf243e2d9b8,
            mid_createOutput_3cd7fedfd5ad6a53,
            mid_createTempOutput_eb4d19137cca2582,
            mid_deleteFile_3e4369e088f8ac83,
            mid_deletePendingFiles_baea6bf243e2d9b8,
            mid_fileLength_9d541dc47c492f6a,
            mid_getDirectory_0bb2ab76b9113e16,
            mid_listAll_aab503f7866a0311,
            mid_listAll_634f22b142f1b681,
            mid_open_eabfea4dff19fd5c,
            mid_open_9ae14512cd36ff31,
            mid_rename_46d41479e8b3fcde,
            mid_sync_9ccc8c0b03c08f7d,
            mid_syncMetaData_baea6bf243e2d9b8,
            mid_toString_8cdd42a672015029,
            mid_fsync_3e4369e088f8ac83,
            mid_ensureCanRead_3e4369e088f8ac83,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit FSDirectory(jobject obj) : ::org::apache::lucene::store::BaseDirectory(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          FSDirectory(const FSDirectory& obj) : ::org::apache::lucene::store::BaseDirectory(obj) {}

          jboolean checkPendingDeletions() const;
          void close() const;
          ::org::apache::lucene::store::IndexOutput createOutput(const ::java::lang::String &, const ::org::apache::lucene::store::IOContext &) const;
          ::org::apache::lucene::store::IndexOutput createTempOutput(const ::java::lang::String &, const ::java::lang::String &, const ::org::apache::lucene::store::IOContext &) const;
          void deleteFile(const ::java::lang::String &) const;
          void deletePendingFiles() const;
          jlong fileLength(const ::java::lang::String &) const;
          ::java::nio::file::Path getDirectory() const;
          JArray< ::java::lang::String > listAll() const;
          static JArray< ::java::lang::String > listAll(const ::java::nio::file::Path &);
          static FSDirectory open(const ::java::nio::file::Path &);
          static FSDirectory open(const ::java::nio::file::Path &, const ::org::apache::lucene::store::LockFactory &);
          void rename(const ::java::lang::String &, const ::java::lang::String &) const;
          void sync(const ::java::util::Collection &) const;
          void syncMetaData() const;
          ::java::lang::String toString() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        extern PyTypeObject PY_TYPE(FSDirectory);

        class t_FSDirectory {
        public:
          PyObject_HEAD
          FSDirectory object;
          static PyObject *wrap_Object(const FSDirectory&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
