#ifndef org_apache_lucene_search_spans_SpanOrQuery_H
#define org_apache_lucene_search_spans_SpanOrQuery_H

#include "org/apache/lucene/search/spans/SpanQuery.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class IndexReader;
      }
      namespace search {
        namespace spans {
          class SpanWeight;
        }
        class IndexSearcher;
        class Query;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
    class Object;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace spans {

          class SpanOrQuery : public ::org::apache::lucene::search::spans::SpanQuery {
          public:
            enum {
              mid_init$_ebc8084be281c41b,
              mid_createWeight_d2ad167e22e9b71e,
              mid_equals_55f7ed877b4720ef,
              mid_getClauses_871481e9edf213ea,
              mid_getField_8cdd42a672015029,
              mid_hashCode_c6ef1683adc87377,
              mid_rewrite_147993ee7f1a7344,
              mid_toString_8f17802fec60c02b,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit SpanOrQuery(jobject obj) : ::org::apache::lucene::search::spans::SpanQuery(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            SpanOrQuery(const SpanOrQuery& obj) : ::org::apache::lucene::search::spans::SpanQuery(obj) {}

            SpanOrQuery(const JArray< ::org::apache::lucene::search::spans::SpanQuery > &);

            ::org::apache::lucene::search::spans::SpanWeight createWeight(const ::org::apache::lucene::search::IndexSearcher &, jboolean) const;
            jboolean equals(const ::java::lang::Object &) const;
            JArray< ::org::apache::lucene::search::spans::SpanQuery > getClauses() const;
            ::java::lang::String getField() const;
            jint hashCode() const;
            ::org::apache::lucene::search::Query rewrite(const ::org::apache::lucene::index::IndexReader &) const;
            ::java::lang::String toString(const ::java::lang::String &) const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace spans {
          extern PyTypeObject PY_TYPE(SpanOrQuery);

          class t_SpanOrQuery {
          public:
            PyObject_HEAD
            SpanOrQuery object;
            static PyObject *wrap_Object(const SpanOrQuery&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
