#ifndef org_apache_lucene_uninverting_UninvertingReader$Type_H
#define org_apache_lucene_uninverting_UninvertingReader$Type_H

#include "java/lang/Enum.h"

namespace java {
  namespace lang {
    class Class;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace uninverting {

        class UninvertingReader$Type : public ::java::lang::Enum {
        public:
          enum {
            mid_valueOf_20e9d96643916f69,
            mid_values_2e366991ef74761e,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit UninvertingReader$Type(jobject obj) : ::java::lang::Enum(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          UninvertingReader$Type(const UninvertingReader$Type& obj) : ::java::lang::Enum(obj) {}

          static UninvertingReader$Type *BINARY;
          static UninvertingReader$Type *DOUBLE_POINT;
          static UninvertingReader$Type *FLOAT_POINT;
          static UninvertingReader$Type *INTEGER_POINT;
          static UninvertingReader$Type *LEGACY_DOUBLE;
          static UninvertingReader$Type *LEGACY_FLOAT;
          static UninvertingReader$Type *LEGACY_INTEGER;
          static UninvertingReader$Type *LEGACY_LONG;
          static UninvertingReader$Type *LONG_POINT;
          static UninvertingReader$Type *SORTED;
          static UninvertingReader$Type *SORTED_SET_BINARY;
          static UninvertingReader$Type *SORTED_SET_DOUBLE;
          static UninvertingReader$Type *SORTED_SET_FLOAT;
          static UninvertingReader$Type *SORTED_SET_INTEGER;
          static UninvertingReader$Type *SORTED_SET_LONG;

          static UninvertingReader$Type valueOf(const ::java::lang::String &);
          static JArray< UninvertingReader$Type > values();
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace uninverting {
        extern PyTypeObject PY_TYPE(UninvertingReader$Type);

        class t_UninvertingReader$Type {
        public:
          PyObject_HEAD
          UninvertingReader$Type object;
          PyTypeObject *parameters[1];
          static PyTypeObject **parameters_(t_UninvertingReader$Type *self)
          {
            return (PyTypeObject **) &(self->parameters);
          }
          static PyObject *wrap_Object(const UninvertingReader$Type&);
          static PyObject *wrap_jobject(const jobject&);
          static PyObject *wrap_Object(const UninvertingReader$Type&, PyTypeObject *);
          static PyObject *wrap_jobject(const jobject&, PyTypeObject *);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
