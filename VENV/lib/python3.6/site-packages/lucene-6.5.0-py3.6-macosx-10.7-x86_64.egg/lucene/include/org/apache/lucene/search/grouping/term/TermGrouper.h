#ifndef org_apache_lucene_search_grouping_term_TermGrouper_H
#define org_apache_lucene_search_grouping_term_TermGrouper_H

#include "org/apache/lucene/search/grouping/Grouper.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace grouping {
          class AllGroupsCollector;
          class SearchGroup;
          class FirstPassGroupingCollector;
          class AllGroupHeadsCollector;
          class SecondPassGroupingCollector;
        }
        class Sort;
      }
      namespace util {
        class BytesRef;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
    class String;
  }
  namespace util {
    class Collection;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace grouping {
          namespace term {

            class TermGrouper : public ::org::apache::lucene::search::grouping::Grouper {
            public:
              enum {
                mid_init$_3e4369e088f8ac83,
                mid_init$_40836d583af99de6,
                mid_getAllGroupsCollector_18c40fa806ff549c,
                mid_getFirstPassCollector_486499f2d5655987,
                mid_getGroupHeadsCollector_3bcd3512b82db401,
                mid_getSecondPassCollector_55b02a201497b5b8,
                max_mid
              };

              static ::java::lang::Class *class$;
              static jmethodID *mids$;
              static bool live$;
              static jclass initializeClass(bool);

              explicit TermGrouper(jobject obj) : ::org::apache::lucene::search::grouping::Grouper(obj) {
                if (obj != NULL)
                  env->getClass(initializeClass);
              }
              TermGrouper(const TermGrouper& obj) : ::org::apache::lucene::search::grouping::Grouper(obj) {}

              TermGrouper(const ::java::lang::String &);
              TermGrouper(const ::java::lang::String &, jint);

              ::org::apache::lucene::search::grouping::AllGroupsCollector getAllGroupsCollector() const;
              ::org::apache::lucene::search::grouping::FirstPassGroupingCollector getFirstPassCollector(const ::org::apache::lucene::search::Sort &, jint) const;
              ::org::apache::lucene::search::grouping::AllGroupHeadsCollector getGroupHeadsCollector(const ::org::apache::lucene::search::Sort &) const;
              ::org::apache::lucene::search::grouping::SecondPassGroupingCollector getSecondPassCollector(const ::java::util::Collection &, const ::org::apache::lucene::search::Sort &, const ::org::apache::lucene::search::Sort &, jint, jboolean, jboolean, jboolean) const;
            };
          }
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace grouping {
          namespace term {
            extern PyTypeObject PY_TYPE(TermGrouper);

            class t_TermGrouper {
            public:
              PyObject_HEAD
              TermGrouper object;
              PyTypeObject *parameters[1];
              static PyTypeObject **parameters_(t_TermGrouper *self)
              {
                return (PyTypeObject **) &(self->parameters);
              }
              static PyObject *wrap_Object(const TermGrouper&);
              static PyObject *wrap_jobject(const jobject&);
              static PyObject *wrap_Object(const TermGrouper&, PyTypeObject *);
              static PyObject *wrap_jobject(const jobject&, PyTypeObject *);
              static void install(PyObject *module);
              static void initialize(PyObject *module);
            };
          }
        }
      }
    }
  }
}

#endif
