#ifndef org_apache_lucene_codecs_lucene60_Lucene60PointsReader_H
#define org_apache_lucene_codecs_lucene60_Lucene60PointsReader_H

#include "org/apache/lucene/codecs/PointsReader.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class PointValues$IntersectVisitor;
        class SegmentReadState;
      }
      namespace util {
        namespace bkd {
          class BKDReader;
        }
        class Accountable;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
    class String;
  }
  namespace util {
    class Collection;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene60 {

          class Lucene60PointsReader : public ::org::apache::lucene::codecs::PointsReader {
          public:
            enum {
              mid_init$_3fa141f95ddd640d,
              mid_checkIntegrity_baea6bf243e2d9b8,
              mid_close_baea6bf243e2d9b8,
              mid_estimatePointCount_6e150cf65b5e0b49,
              mid_getBKDReader_1ec55728c56e8bbb,
              mid_getBytesPerDimension_07a398a2298c97a7,
              mid_getChildResources_fd35991ad7af5f7b,
              mid_getDocCount_07a398a2298c97a7,
              mid_getMaxPackedValue_be7021e69479c2d6,
              mid_getMinPackedValue_be7021e69479c2d6,
              mid_getNumDimensions_07a398a2298c97a7,
              mid_intersect_2133e9e3adf95ba0,
              mid_ramBytesUsed_25efeb8f9279460d,
              mid_size_9d541dc47c492f6a,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit Lucene60PointsReader(jobject obj) : ::org::apache::lucene::codecs::PointsReader(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            Lucene60PointsReader(const Lucene60PointsReader& obj) : ::org::apache::lucene::codecs::PointsReader(obj) {}

            Lucene60PointsReader(const ::org::apache::lucene::index::SegmentReadState &);

            void checkIntegrity() const;
            void close() const;
            jlong estimatePointCount(const ::java::lang::String &, const ::org::apache::lucene::index::PointValues$IntersectVisitor &) const;
            ::org::apache::lucene::util::bkd::BKDReader getBKDReader(const ::java::lang::String &) const;
            jint getBytesPerDimension(const ::java::lang::String &) const;
            ::java::util::Collection getChildResources() const;
            jint getDocCount(const ::java::lang::String &) const;
            JArray< jbyte > getMaxPackedValue(const ::java::lang::String &) const;
            JArray< jbyte > getMinPackedValue(const ::java::lang::String &) const;
            jint getNumDimensions(const ::java::lang::String &) const;
            void intersect(const ::java::lang::String &, const ::org::apache::lucene::index::PointValues$IntersectVisitor &) const;
            jlong ramBytesUsed() const;
            jlong size(const ::java::lang::String &) const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene60 {
          extern PyTypeObject PY_TYPE(Lucene60PointsReader);

          class t_Lucene60PointsReader {
          public:
            PyObject_HEAD
            Lucene60PointsReader object;
            static PyObject *wrap_Object(const Lucene60PointsReader&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
