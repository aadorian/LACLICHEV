#ifndef org_apache_lucene_analysis_util_CharArraySet_H
#define org_apache_lucene_analysis_util_CharArraySet_H

#include "org/apache/lucene/analysis/CharArraySet.h"

namespace java {
  namespace lang {
    class Class;
    class Object;
  }
  namespace util {
    class Collection;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {
        namespace util {

          class CharArraySet : public ::org::apache::lucene::analysis::CharArraySet {
          public:
            enum {
              mid_init$_f01f0d453c0af710,
              mid_init$_96ff5a24cb7be7e8,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit CharArraySet(jobject obj) : ::org::apache::lucene::analysis::CharArraySet(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            CharArraySet(const CharArraySet& obj) : ::org::apache::lucene::analysis::CharArraySet(obj) {}

            CharArraySet(jint, jboolean);
            CharArraySet(const ::java::util::Collection &, jboolean);
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {
        namespace util {
          extern PyTypeObject PY_TYPE(CharArraySet);

          class t_CharArraySet {
          public:
            PyObject_HEAD
            CharArraySet object;
            PyTypeObject *parameters[1];
            static PyTypeObject **parameters_(t_CharArraySet *self)
            {
              return (PyTypeObject **) &(self->parameters);
            }
            static PyObject *wrap_Object(const CharArraySet&);
            static PyObject *wrap_jobject(const jobject&);
            static PyObject *wrap_Object(const CharArraySet&, PyTypeObject *);
            static PyObject *wrap_jobject(const jobject&, PyTypeObject *);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
