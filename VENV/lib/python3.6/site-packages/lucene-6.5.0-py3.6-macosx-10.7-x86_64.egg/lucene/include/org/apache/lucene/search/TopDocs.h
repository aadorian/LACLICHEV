#ifndef org_apache_lucene_search_TopDocs_H
#define org_apache_lucene_search_TopDocs_H

#include "java/lang/Object.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        class ScoreDoc;
        class TopFieldDocs;
        class Sort;
      }
    }
  }
}
namespace java {
  namespace lang {
    class Class;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {

        class TopDocs : public ::java::lang::Object {
        public:
          enum {
            mid_init$_cd91fccfe36ecf92,
            mid_getMaxScore_388e059cf45fb2f9,
            mid_merge_62df4578ccf24f58,
            mid_merge_d59ee5dbcf111cb7,
            mid_merge_335552236c0b6053,
            mid_merge_fa45f83dce4a7c5a,
            mid_setMaxScore_3c7afe1a86cc960f,
            max_mid
          };

          enum {
            fid_scoreDocs,
            fid_totalHits,
            max_fid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static jfieldID *fids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit TopDocs(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          TopDocs(const TopDocs& obj) : ::java::lang::Object(obj) {}

          JArray< ::org::apache::lucene::search::ScoreDoc > _get_scoreDocs() const;
          void _set_scoreDocs(const JArray< ::org::apache::lucene::search::ScoreDoc > &) const;
          jint _get_totalHits() const;
          void _set_totalHits(jint) const;

          TopDocs(jint, const JArray< ::org::apache::lucene::search::ScoreDoc > &, jfloat);

          jfloat getMaxScore() const;
          static TopDocs merge(jint, const JArray< TopDocs > &);
          static ::org::apache::lucene::search::TopFieldDocs merge(const ::org::apache::lucene::search::Sort &, jint, const JArray< ::org::apache::lucene::search::TopFieldDocs > &);
          static TopDocs merge(jint, jint, const JArray< TopDocs > &, jboolean);
          static ::org::apache::lucene::search::TopFieldDocs merge(const ::org::apache::lucene::search::Sort &, jint, jint, const JArray< ::org::apache::lucene::search::TopFieldDocs > &, jboolean);
          void setMaxScore(jfloat) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        extern PyTypeObject PY_TYPE(TopDocs);

        class t_TopDocs {
        public:
          PyObject_HEAD
          TopDocs object;
          static PyObject *wrap_Object(const TopDocs&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
