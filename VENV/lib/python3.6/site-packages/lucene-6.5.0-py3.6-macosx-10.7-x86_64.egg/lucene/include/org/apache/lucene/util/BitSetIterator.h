#ifndef org_apache_lucene_util_BitSetIterator_H
#define org_apache_lucene_util_BitSetIterator_H

#include "org/apache/lucene/search/DocIdSetIterator.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class SparseFixedBitSet;
        class BitSet;
        class FixedBitSet;
      }
    }
  }
}
namespace java {
  namespace lang {
    class Class;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {

        class BitSetIterator : public ::org::apache::lucene::search::DocIdSetIterator {
        public:
          enum {
            mid_init$_4b02f1573bd68000,
            mid_advance_eb4f2d82869c338b,
            mid_cost_25efeb8f9279460d,
            mid_docID_c6ef1683adc87377,
            mid_getBitSet_3ec19efbd2dc7863,
            mid_getFixedBitSetOrNull_eb0f9c7ab7700ac7,
            mid_getSparseFixedBitSetOrNull_8d771f0ddbb4b924,
            mid_nextDoc_c6ef1683adc87377,
            mid_setDocId_e3e5f5ff373509b3,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit BitSetIterator(jobject obj) : ::org::apache::lucene::search::DocIdSetIterator(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          BitSetIterator(const BitSetIterator& obj) : ::org::apache::lucene::search::DocIdSetIterator(obj) {}

          BitSetIterator(const ::org::apache::lucene::util::BitSet &, jlong);

          jint advance(jint) const;
          jlong cost() const;
          jint docID() const;
          ::org::apache::lucene::util::BitSet getBitSet() const;
          static ::org::apache::lucene::util::FixedBitSet getFixedBitSetOrNull(const ::org::apache::lucene::search::DocIdSetIterator &);
          static ::org::apache::lucene::util::SparseFixedBitSet getSparseFixedBitSetOrNull(const ::org::apache::lucene::search::DocIdSetIterator &);
          jint nextDoc() const;
          void setDocId(jint) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        extern PyTypeObject PY_TYPE(BitSetIterator);

        class t_BitSetIterator {
        public:
          PyObject_HEAD
          BitSetIterator object;
          static PyObject *wrap_Object(const BitSetIterator&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
