#ifndef org_apache_lucene_document_FieldType_H
#define org_apache_lucene_document_FieldType_H

#include "java/lang/Object.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {
        class FieldType$LegacyNumericType;
      }
      namespace index {
        class IndexOptions;
        class DocValuesType;
        class IndexableFieldType;
      }
    }
  }
}
namespace java {
  namespace lang {
    class Class;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {

        class FieldType : public ::java::lang::Object {
        public:
          enum {
            mid_init$_baea6bf243e2d9b8,
            mid_docValuesType_b8fe618cc019ed9b,
            mid_equals_55f7ed877b4720ef,
            mid_freeze_baea6bf243e2d9b8,
            mid_hashCode_c6ef1683adc87377,
            mid_indexOptions_e9c3a5befa5763ef,
            mid_numericPrecisionStep_c6ef1683adc87377,
            mid_numericType_3fb73d373250bba0,
            mid_omitNorms_cc8de42f0a91785b,
            mid_pointDimensionCount_c6ef1683adc87377,
            mid_pointNumBytes_c6ef1683adc87377,
            mid_setDimensions_bc518be07064cfee,
            mid_setDocValuesType_0850b5b2bd330bf4,
            mid_setIndexOptions_925a3b1c0534b063,
            mid_setNumericPrecisionStep_e3e5f5ff373509b3,
            mid_setNumericType_83c02fee09542a5e,
            mid_setOmitNorms_787a33a11683567e,
            mid_setStoreTermVectorOffsets_787a33a11683567e,
            mid_setStoreTermVectorPayloads_787a33a11683567e,
            mid_setStoreTermVectorPositions_787a33a11683567e,
            mid_setStoreTermVectors_787a33a11683567e,
            mid_setStored_787a33a11683567e,
            mid_setTokenized_787a33a11683567e,
            mid_storeTermVectorOffsets_cc8de42f0a91785b,
            mid_storeTermVectorPayloads_cc8de42f0a91785b,
            mid_storeTermVectorPositions_cc8de42f0a91785b,
            mid_storeTermVectors_cc8de42f0a91785b,
            mid_stored_cc8de42f0a91785b,
            mid_toString_8cdd42a672015029,
            mid_tokenized_cc8de42f0a91785b,
            mid_checkIfFrozen_baea6bf243e2d9b8,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit FieldType(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          FieldType(const FieldType& obj) : ::java::lang::Object(obj) {}

          FieldType();

          ::org::apache::lucene::index::DocValuesType docValuesType() const;
          jboolean equals(const ::java::lang::Object &) const;
          void freeze() const;
          jint hashCode() const;
          ::org::apache::lucene::index::IndexOptions indexOptions() const;
          jint numericPrecisionStep() const;
          ::org::apache::lucene::document::FieldType$LegacyNumericType numericType() const;
          jboolean omitNorms() const;
          jint pointDimensionCount() const;
          jint pointNumBytes() const;
          void setDimensions(jint, jint) const;
          void setDocValuesType(const ::org::apache::lucene::index::DocValuesType &) const;
          void setIndexOptions(const ::org::apache::lucene::index::IndexOptions &) const;
          void setNumericPrecisionStep(jint) const;
          void setNumericType(const ::org::apache::lucene::document::FieldType$LegacyNumericType &) const;
          void setOmitNorms(jboolean) const;
          void setStoreTermVectorOffsets(jboolean) const;
          void setStoreTermVectorPayloads(jboolean) const;
          void setStoreTermVectorPositions(jboolean) const;
          void setStoreTermVectors(jboolean) const;
          void setStored(jboolean) const;
          void setTokenized(jboolean) const;
          jboolean storeTermVectorOffsets() const;
          jboolean storeTermVectorPayloads() const;
          jboolean storeTermVectorPositions() const;
          jboolean storeTermVectors() const;
          jboolean stored() const;
          ::java::lang::String toString() const;
          jboolean tokenized() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {
        extern PyTypeObject PY_TYPE(FieldType);

        class t_FieldType {
        public:
          PyObject_HEAD
          FieldType object;
          static PyObject *wrap_Object(const FieldType&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
