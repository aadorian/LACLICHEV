#ifndef org_apache_lucene_util_bkd_PointReader_H
#define org_apache_lucene_util_bkd_PointReader_H

#include "java/lang/Object.h"

namespace java {
  namespace io {
    class IOException;
    class Closeable;
  }
  namespace lang {
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class LongBitSet;
        namespace bkd {
          class PointWriter;
        }
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        namespace bkd {

          class PointReader : public ::java::lang::Object {
          public:
            enum {
              mid_init$_baea6bf243e2d9b8,
              mid_docID_c6ef1683adc87377,
              mid_markOrds_c2824bd77fa24fe3,
              mid_next_cc8de42f0a91785b,
              mid_ord_25efeb8f9279460d,
              mid_packedValue_9f2b5bf6861b55dd,
              mid_split_0325a26189863363,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit PointReader(jobject obj) : ::java::lang::Object(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            PointReader(const PointReader& obj) : ::java::lang::Object(obj) {}

            PointReader();

            jint docID() const;
            void markOrds(jlong, const ::org::apache::lucene::util::LongBitSet &) const;
            jboolean next() const;
            jlong ord() const;
            JArray< jbyte > packedValue() const;
            jlong split(jlong, const ::org::apache::lucene::util::LongBitSet &, const ::org::apache::lucene::util::bkd::PointWriter &, const ::org::apache::lucene::util::bkd::PointWriter &, jboolean) const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        namespace bkd {
          extern PyTypeObject PY_TYPE(PointReader);

          class t_PointReader {
          public:
            PyObject_HEAD
            PointReader object;
            static PyObject *wrap_Object(const PointReader&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
