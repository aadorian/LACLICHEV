#ifndef org_apache_lucene_codecs_lucene50_Lucene50PostingsWriter_H
#define org_apache_lucene_codecs_lucene50_Lucene50PostingsWriter_H

#include "org/apache/lucene/codecs/PushPostingsWriterBase.h"

namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace store {
        class IndexOutput;
        class DataOutput;
      }
      namespace index {
        class FieldInfo;
        class SegmentWriteState;
      }
      namespace codecs {
        class BlockTermState;
      }
      namespace util {
        class BytesRef;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene50 {

          class Lucene50PostingsWriter : public ::org::apache::lucene::codecs::PushPostingsWriterBase {
          public:
            enum {
              mid_init$_f1e3c7ce211560df,
              mid_addPosition_c85e5496b6b5ab56,
              mid_close_baea6bf243e2d9b8,
              mid_encodeTerm_d3648b13d4f2afc8,
              mid_finishDoc_baea6bf243e2d9b8,
              mid_finishTerm_fc9c39078fb104c7,
              mid_init_ee2fab7ee51fc8c5,
              mid_setField_630d1f16b0a0a319,
              mid_startDoc_bc518be07064cfee,
              mid_startTerm_baea6bf243e2d9b8,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit Lucene50PostingsWriter(jobject obj) : ::org::apache::lucene::codecs::PushPostingsWriterBase(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            Lucene50PostingsWriter(const Lucene50PostingsWriter& obj) : ::org::apache::lucene::codecs::PushPostingsWriterBase(obj) {}

            Lucene50PostingsWriter(const ::org::apache::lucene::index::SegmentWriteState &);

            void addPosition(jint, const ::org::apache::lucene::util::BytesRef &, jint, jint) const;
            void close() const;
            void encodeTerm(const JArray< jlong > &, const ::org::apache::lucene::store::DataOutput &, const ::org::apache::lucene::index::FieldInfo &, const ::org::apache::lucene::codecs::BlockTermState &, jboolean) const;
            void finishDoc() const;
            void finishTerm(const ::org::apache::lucene::codecs::BlockTermState &) const;
            void init(const ::org::apache::lucene::store::IndexOutput &, const ::org::apache::lucene::index::SegmentWriteState &) const;
            jint setField(const ::org::apache::lucene::index::FieldInfo &) const;
            void startDoc(jint, jint) const;
            void startTerm() const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace codecs {
        namespace lucene50 {
          extern PyTypeObject PY_TYPE(Lucene50PostingsWriter);

          class t_Lucene50PostingsWriter {
          public:
            PyObject_HEAD
            Lucene50PostingsWriter object;
            static PyObject *wrap_Object(const Lucene50PostingsWriter&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
