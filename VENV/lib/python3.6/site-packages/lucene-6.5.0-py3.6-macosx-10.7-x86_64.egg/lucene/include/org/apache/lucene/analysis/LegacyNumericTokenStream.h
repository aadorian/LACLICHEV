#ifndef org_apache_lucene_analysis_LegacyNumericTokenStream_H
#define org_apache_lucene_analysis_LegacyNumericTokenStream_H

#include "org/apache/lucene/analysis/TokenStream.h"

namespace java {
  namespace lang {
    class Class;
    class String;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class AttributeFactory;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {

        class LegacyNumericTokenStream : public ::org::apache::lucene::analysis::TokenStream {
        public:
          enum {
            mid_init$_baea6bf243e2d9b8,
            mid_init$_e3e5f5ff373509b3,
            mid_init$_50297abab21a3f28,
            mid_getPrecisionStep_c6ef1683adc87377,
            mid_incrementToken_cc8de42f0a91785b,
            mid_reset_baea6bf243e2d9b8,
            mid_setDoubleValue_53efcdc01b56b921,
            mid_setFloatValue_143e2575a2e408e7,
            mid_setIntValue_d20e2982f1ceacfd,
            mid_setLongValue_9edbd6fe49aa5671,
            mid_toString_8cdd42a672015029,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit LegacyNumericTokenStream(jobject obj) : ::org::apache::lucene::analysis::TokenStream(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          LegacyNumericTokenStream(const LegacyNumericTokenStream& obj) : ::org::apache::lucene::analysis::TokenStream(obj) {}

          static ::java::lang::String *TOKEN_TYPE_FULL_PREC;
          static ::java::lang::String *TOKEN_TYPE_LOWER_PREC;

          LegacyNumericTokenStream();
          LegacyNumericTokenStream(jint);
          LegacyNumericTokenStream(const ::org::apache::lucene::util::AttributeFactory &, jint);

          jint getPrecisionStep() const;
          jboolean incrementToken() const;
          void reset() const;
          LegacyNumericTokenStream setDoubleValue(jdouble) const;
          LegacyNumericTokenStream setFloatValue(jfloat) const;
          LegacyNumericTokenStream setIntValue(jint) const;
          LegacyNumericTokenStream setLongValue(jlong) const;
          ::java::lang::String toString() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {
        extern PyTypeObject PY_TYPE(LegacyNumericTokenStream);

        class t_LegacyNumericTokenStream {
        public:
          PyObject_HEAD
          LegacyNumericTokenStream object;
          static PyObject *wrap_Object(const LegacyNumericTokenStream&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
