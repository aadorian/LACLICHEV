#ifndef org_antlr_v4_runtime_atn_ParserATNSimulator_H
#define org_antlr_v4_runtime_atn_ParserATNSimulator_H

#include "org/antlr/v4/runtime/atn/ATNSimulator.h"

namespace java {
  namespace lang {
    class Class;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace antlr {
    namespace v4 {
      namespace runtime {
        namespace atn {

          class ParserATNSimulator : public ::org::antlr::v4::runtime::atn::ATNSimulator {
          public:
            enum {
              mid_clearDFA_baea6bf243e2d9b8,
              mid_getRuleName_e5ab4ec225f780e9,
              mid_getTokenName_e5ab4ec225f780e9,
              mid_reset_baea6bf243e2d9b8,
              mid_closure_8d3547147853cd0d,
              mid_reportAmbiguity_2d6ae7bbd7b54d1b,
              mid_reportAttemptingFullContext_d5c50de299c46f97,
              mid_reportContextSensitivity_f47ae7c7af95cf0c,
              mid_execATN_ba30915ea3fd21e1,
              mid_getExistingTargetState_f3ac96205f809ceb,
              mid_computeTargetState_44d4d3e3e772c8fc,
              mid_getReachableTarget_a034e40ab54f13af,
              mid_computeStartState_94ba75bdb97374c3,
              mid_getEpsilonTarget_3ca3cee6c09f657c,
              mid_ruleTransition_67c820bb76e09a88,
              mid_addDFAEdge_fd6a101afc9afd9a,
              mid_addDFAState_3e13aa63139ccb14,
              mid_computeReachSet_7a0966fd7f8a3b7a,
              mid_evalSemanticContext_bcd4a770c66d8f72,
              mid_evalSemanticContext_42f847a511e506d6,
              mid_predicateDFAState_2e659ac9b5887b42,
              mid_execATNWithFullContext_f9e236611f809b56,
              mid_removeAllConfigsNotInRuleStopState_3a36f0a30452be87,
              mid_applyPrecedenceFilter_dd30da87c684d7bf,
              mid_getPredsForAmbigAlts_7b1768bbc28f227a,
              mid_getPredicatePredictions_5bd9815e6fbbb8fb,
              mid_getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule_b136aa37360a63f9,
              mid_getAltThatFinishedDecisionEntryRule_39e1279cff6be481,
              mid_splitAccordingToSemanticValidity_9b04e563080af34e,
              mid_closureCheckingStopState_f36b36cea14ddc94,
              mid_closure__f36b36cea14ddc94,
              mid_actionTransition_e63cff22a1909771,
              mid_predTransition_d49918266527507a,
              mid_getConflictingAlts_ebb1ed217e28c6e6,
              mid_getConflictingAltsOrUniqueAlt_ebb1ed217e28c6e6,
              mid_noViableAlt_3280e4b8678cd704,
              mid_getUniqueAlt_39e1279cff6be481,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit ParserATNSimulator(jobject obj) : ::org::antlr::v4::runtime::atn::ATNSimulator(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            ParserATNSimulator(const ParserATNSimulator& obj) : ::org::antlr::v4::runtime::atn::ATNSimulator(obj) {}

            static jboolean debug;
            static jboolean debug_list_atn_decisions;
            static jboolean dfa_debug;
            static jboolean retry_debug;

            void clearDFA() const;
            ::java::lang::String getRuleName(jint) const;
            ::java::lang::String getTokenName(jint) const;
            void reset() const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace antlr {
    namespace v4 {
      namespace runtime {
        namespace atn {
          extern PyTypeObject PY_TYPE(ParserATNSimulator);

          class t_ParserATNSimulator {
          public:
            PyObject_HEAD
            ParserATNSimulator object;
            static PyObject *wrap_Object(const ParserATNSimulator&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
