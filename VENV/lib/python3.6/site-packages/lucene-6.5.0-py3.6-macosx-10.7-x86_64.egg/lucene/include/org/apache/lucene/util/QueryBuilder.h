#ifndef org_apache_lucene_util_QueryBuilder_H
#define org_apache_lucene_util_QueryBuilder_H

#include "java/lang/Object.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        class BooleanClause$Occur;
        class Query;
      }
      namespace analysis {
        class Analyzer;
      }
    }
  }
}
namespace java {
  namespace lang {
    class Class;
    class String;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {

        class QueryBuilder : public ::java::lang::Object {
        public:
          enum {
            mid_init$_42ff09a2d57c3814,
            mid_createBooleanQuery_a7d9ffed1df3698b,
            mid_createBooleanQuery_79553ebc1bf634d0,
            mid_createMinShouldMatchQuery_611e5e7454ca9888,
            mid_createPhraseQuery_a7d9ffed1df3698b,
            mid_createPhraseQuery_f6f3a8d35722f08a,
            mid_getAnalyzer_69668bfecbc4727e,
            mid_getAutoGenerateMultiTermSynonymsPhraseQuery_cc8de42f0a91785b,
            mid_getEnableGraphQueries_cc8de42f0a91785b,
            mid_getEnablePositionIncrements_cc8de42f0a91785b,
            mid_setAnalyzer_42ff09a2d57c3814,
            mid_setAutoGenerateMultiTermSynonymsPhraseQuery_787a33a11683567e,
            mid_setEnableGraphQueries_787a33a11683567e,
            mid_setEnablePositionIncrements_787a33a11683567e,
            mid_add_b65ffbf5181b5fea,
            mid_createFieldQuery_64af224788673369,
            mid_createFieldQuery_2986bc86c6076208,
            mid_createSpanQuery_a9fc9e6152357991,
            mid_analyzeTerm_11f379b65395b894,
            mid_analyzeBoolean_11f379b65395b894,
            mid_analyzeMultiBoolean_689246f4108c3f34,
            mid_analyzePhrase_87d803d31d4e8805,
            mid_analyzeMultiPhrase_87d803d31d4e8805,
            mid_analyzeGraphBoolean_689246f4108c3f34,
            mid_analyzeGraphPhrase_8c7df4b912dd2ace,
            mid_newBooleanQuery_b0a549f075bfda85,
            mid_newSynonymQuery_8b78289081dbaad7,
            mid_newGraphSynonymQuery_f8c3a91ae0634af9,
            mid_newTermQuery_a62c168fd7d3a321,
            mid_newMultiPhraseQueryBuilder_b7afffc0e5ecf372,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit QueryBuilder(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          QueryBuilder(const QueryBuilder& obj) : ::java::lang::Object(obj) {}

          QueryBuilder(const ::org::apache::lucene::analysis::Analyzer &);

          ::org::apache::lucene::search::Query createBooleanQuery(const ::java::lang::String &, const ::java::lang::String &) const;
          ::org::apache::lucene::search::Query createBooleanQuery(const ::java::lang::String &, const ::java::lang::String &, const ::org::apache::lucene::search::BooleanClause$Occur &) const;
          ::org::apache::lucene::search::Query createMinShouldMatchQuery(const ::java::lang::String &, const ::java::lang::String &, jfloat) const;
          ::org::apache::lucene::search::Query createPhraseQuery(const ::java::lang::String &, const ::java::lang::String &) const;
          ::org::apache::lucene::search::Query createPhraseQuery(const ::java::lang::String &, const ::java::lang::String &, jint) const;
          ::org::apache::lucene::analysis::Analyzer getAnalyzer() const;
          jboolean getAutoGenerateMultiTermSynonymsPhraseQuery() const;
          jboolean getEnableGraphQueries() const;
          jboolean getEnablePositionIncrements() const;
          void setAnalyzer(const ::org::apache::lucene::analysis::Analyzer &) const;
          void setAutoGenerateMultiTermSynonymsPhraseQuery(jboolean) const;
          void setEnableGraphQueries(jboolean) const;
          void setEnablePositionIncrements(jboolean) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        extern PyTypeObject PY_TYPE(QueryBuilder);

        class t_QueryBuilder {
        public:
          PyObject_HEAD
          QueryBuilder object;
          static PyObject *wrap_Object(const QueryBuilder&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
