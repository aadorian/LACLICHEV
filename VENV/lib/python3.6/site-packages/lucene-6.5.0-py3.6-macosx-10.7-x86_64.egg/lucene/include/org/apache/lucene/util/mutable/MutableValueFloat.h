#ifndef org_apache_lucene_util_mutable_MutableValueFloat_H
#define org_apache_lucene_util_mutable_MutableValueFloat_H

#include "org/apache/lucene/util/mutable/MutableValue.h"

namespace java {
  namespace lang {
    class Class;
    class Object;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        namespace mutable$ {

          class MutableValueFloat : public ::org::apache::lucene::util::mutable$::MutableValue {
          public:
            enum {
              mid_init$_baea6bf243e2d9b8,
              mid_compareSameType_905ab65669c35710,
              mid_copy_6f2080e83c37d505,
              mid_duplicate_d21cda2089497ecd,
              mid_equalsSameType_55f7ed877b4720ef,
              mid_hashCode_c6ef1683adc87377,
              mid_toObject_fcd621d44e119d75,
              max_mid
            };

            enum {
              fid_value,
              max_fid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static jfieldID *fids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit MutableValueFloat(jobject obj) : ::org::apache::lucene::util::mutable$::MutableValue(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            MutableValueFloat(const MutableValueFloat& obj) : ::org::apache::lucene::util::mutable$::MutableValue(obj) {}

            jfloat _get_value() const;
            void _set_value(jfloat) const;

            MutableValueFloat();

            jint compareSameType(const ::java::lang::Object &) const;
            void copy(const ::org::apache::lucene::util::mutable$::MutableValue &) const;
            ::org::apache::lucene::util::mutable$::MutableValue duplicate() const;
            jboolean equalsSameType(const ::java::lang::Object &) const;
            jint hashCode() const;
            ::java::lang::Object toObject() const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        namespace mutable$ {
          extern PyTypeObject PY_TYPE(MutableValueFloat);

          class t_MutableValueFloat {
          public:
            PyObject_HEAD
            MutableValueFloat object;
            static PyObject *wrap_Object(const MutableValueFloat&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
