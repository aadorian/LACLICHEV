#ifndef org_apache_lucene_analysis_el_GreekAnalyzer_H
#define org_apache_lucene_analysis_el_GreekAnalyzer_H

#include "org/apache/lucene/analysis/StopwordAnalyzerBase.h"

namespace java {
  namespace lang {
    class Class;
    class String;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {
        class CharArraySet;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {
        namespace el {

          class GreekAnalyzer : public ::org::apache::lucene::analysis::StopwordAnalyzerBase {
          public:
            enum {
              mid_init$_baea6bf243e2d9b8,
              mid_init$_ad635b8b1111bef8,
              mid_getDefaultStopSet_8d8f63c37b4b0a75,
              mid_normalize_01c3805d376d8763,
              mid_createComponents_1a8b34d996d62698,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit GreekAnalyzer(jobject obj) : ::org::apache::lucene::analysis::StopwordAnalyzerBase(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            GreekAnalyzer(const GreekAnalyzer& obj) : ::org::apache::lucene::analysis::StopwordAnalyzerBase(obj) {}

            static ::java::lang::String *DEFAULT_STOPWORD_FILE;

            GreekAnalyzer();
            GreekAnalyzer(const ::org::apache::lucene::analysis::CharArraySet &);

            static ::org::apache::lucene::analysis::CharArraySet getDefaultStopSet();
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace analysis {
        namespace el {
          extern PyTypeObject PY_TYPE(GreekAnalyzer);

          class t_GreekAnalyzer {
          public:
            PyObject_HEAD
            GreekAnalyzer object;
            static PyObject *wrap_Object(const GreekAnalyzer&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
