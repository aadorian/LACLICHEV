#ifndef org_apache_lucene_search_RandomAccessWeight_H
#define org_apache_lucene_search_RandomAccessWeight_H

#include "org/apache/lucene/search/ConstantScoreWeight.h"

namespace java {
  namespace lang {
    class Class;
  }
  namespace io {
    class IOException;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class LeafReaderContext;
      }
      namespace search {
        class Scorer;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {

        class RandomAccessWeight : public ::org::apache::lucene::search::ConstantScoreWeight {
        public:
          enum {
            mid_scorer_186ef00ded64d6e9,
            mid_getMatchingDocs_cfa52bc8590a46d4,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit RandomAccessWeight(jobject obj) : ::org::apache::lucene::search::ConstantScoreWeight(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          RandomAccessWeight(const RandomAccessWeight& obj) : ::org::apache::lucene::search::ConstantScoreWeight(obj) {}

          ::org::apache::lucene::search::Scorer scorer(const ::org::apache::lucene::index::LeafReaderContext &) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        extern PyTypeObject PY_TYPE(RandomAccessWeight);

        class t_RandomAccessWeight {
        public:
          PyObject_HEAD
          RandomAccessWeight object;
          static PyObject *wrap_Object(const RandomAccessWeight&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
