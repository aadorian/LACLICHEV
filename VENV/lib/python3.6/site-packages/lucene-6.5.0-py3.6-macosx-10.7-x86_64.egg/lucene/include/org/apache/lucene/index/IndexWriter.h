#ifndef org_apache_lucene_index_IndexWriter_H
#define org_apache_lucene_index_IndexWriter_H

#include "java/lang/Object.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        class SegmentInfos;
        class Term;
        class CodecReader;
        class IndexableField;
        class DirectoryReader;
        class IndexReader;
        class MergePolicy$OneMerge;
        class LiveIndexWriterConfig;
        class IndexWriterConfig;
        class TwoPhaseCommit;
        class SegmentCommitInfo;
      }
      namespace util {
        class Accountable;
        class BytesRef;
      }
      namespace analysis {
        class Analyzer;
      }
      namespace search {
        class Query;
      }
      namespace document {
        class Field;
      }
      namespace store {
        class Directory;
      }
    }
  }
}
namespace java {
  namespace util {
    class Collection;
    class Set;
    class Map;
    class Map$Entry;
  }
  namespace lang {
    class Class;
    class Throwable;
    class Iterable;
    class String;
  }
  namespace io {
    class Closeable;
    class IOException;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {

        class IndexWriter : public ::java::lang::Object {
        public:
          enum {
            mid_init$_836e4bda2c1e2052,
            mid_addDocument_db7fe732c7aeb147,
            mid_addDocuments_db7fe732c7aeb147,
            mid_addIndexes_9efeebc9a88ba083,
            mid_addIndexes_cee24cba5075a2ce,
            mid_advanceSegmentInfosVersion_ea7e2607a44304f3,
            mid_close_baea6bf243e2d9b8,
            mid_commit_25efeb8f9279460d,
            mid_decRefDeleter_15e3447a6acfe5a0,
            mid_deleteAll_25efeb8f9279460d,
            mid_deleteDocuments_54270edbea460d6a,
            mid_deleteDocuments_b89409008b5d7ff1,
            mid_deleteUnusedFiles_baea6bf243e2d9b8,
            mid_flush_baea6bf243e2d9b8,
            mid_forceMerge_e3e5f5ff373509b3,
            mid_forceMerge_f01f0d453c0af710,
            mid_forceMergeDeletes_baea6bf243e2d9b8,
            mid_forceMergeDeletes_787a33a11683567e,
            mid_getAnalyzer_69668bfecbc4727e,
            mid_getCommitData_f44c49bd487dca3f,
            mid_getConfig_a9f64dc8b4adaaff,
            mid_getDirectory_3c1548500f308ae8,
            mid_getFieldNames_c97555483a81e2c4,
            mid_getLiveCommitData_bfec1aa5bfaa559a,
            mid_getMaxCompletedSequenceNumber_25efeb8f9279460d,
            mid_getMergingSegments_fd35991ad7af5f7b,
            mid_getNextMerge_2058ef68d73dd6c1,
            mid_getReader_4c47011dea9fad84,
            mid_getReader_bdead39ffdf5d934,
            mid_getTragicException_d1a1f9fdf8c162b0,
            mid_hasDeletions_cc8de42f0a91785b,
            mid_hasPendingMerges_cc8de42f0a91785b,
            mid_hasUncommittedChanges_cc8de42f0a91785b,
            mid_incRefDeleter_15e3447a6acfe5a0,
            mid_isLocked_ccab680b13100b30,
            mid_isOpen_cc8de42f0a91785b,
            mid_maxDoc_c6ef1683adc87377,
            mid_maybeMerge_baea6bf243e2d9b8,
            mid_merge_d17179dbc94e5021,
            mid_numDeletedDocs_dc1a1b91bd3afce2,
            mid_numDocs_c6ef1683adc87377,
            mid_numRamDocs_c6ef1683adc87377,
            mid_prepareCommit_25efeb8f9279460d,
            mid_ramBytesUsed_25efeb8f9279460d,
            mid_rollback_baea6bf243e2d9b8,
            mid_setCommitData_c63a2704a45ba212,
            mid_setLiveCommitData_a1c784e81f340777,
            mid_setLiveCommitData_7964d80d603c9cbf,
            mid_tryDeleteDocument_6212cf3ae17ead53,
            mid_updateBinaryDocValue_ff7cd8864367b2b1,
            mid_updateDocValues_7910696e3abef6db,
            mid_updateDocument_9769af6f244483a1,
            mid_updateDocuments_9769af6f244483a1,
            mid_updateNumericDocValue_eec76030d8ce7aa4,
            mid_ensureOpen_baea6bf243e2d9b8,
            mid_ensureOpen_787a33a11683567e,
            mid_doAfterFlush_baea6bf243e2d9b8,
            mid_doBeforeFlush_baea6bf243e2d9b8,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit IndexWriter(jobject obj) : ::java::lang::Object(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          IndexWriter(const IndexWriter& obj) : ::java::lang::Object(obj) {}

          static jint MAX_DOCS;
          static jint MAX_POSITION;
          static jint MAX_STORED_STRING_LENGTH;
          static jint MAX_TERM_LENGTH;
          static ::java::lang::String *SOURCE;
          static ::java::lang::String *SOURCE_ADDINDEXES_READERS;
          static ::java::lang::String *SOURCE_FLUSH;
          static ::java::lang::String *SOURCE_MERGE;
          static ::java::lang::String *WRITE_LOCK_NAME;

          IndexWriter(const ::org::apache::lucene::store::Directory &, const ::org::apache::lucene::index::IndexWriterConfig &);

          jlong addDocument(const ::java::lang::Iterable &) const;
          jlong addDocuments(const ::java::lang::Iterable &) const;
          jlong addIndexes(const JArray< ::org::apache::lucene::store::Directory > &) const;
          jlong addIndexes(const JArray< ::org::apache::lucene::index::CodecReader > &) const;
          void advanceSegmentInfosVersion(jlong) const;
          void close() const;
          jlong commit() const;
          void decRefDeleter(const ::org::apache::lucene::index::SegmentInfos &) const;
          jlong deleteAll() const;
          jlong deleteDocuments(const JArray< ::org::apache::lucene::search::Query > &) const;
          jlong deleteDocuments(const JArray< ::org::apache::lucene::index::Term > &) const;
          void deleteUnusedFiles() const;
          void flush() const;
          void forceMerge(jint) const;
          void forceMerge(jint, jboolean) const;
          void forceMergeDeletes() const;
          void forceMergeDeletes(jboolean) const;
          ::org::apache::lucene::analysis::Analyzer getAnalyzer() const;
          ::java::util::Map getCommitData() const;
          ::org::apache::lucene::index::LiveIndexWriterConfig getConfig() const;
          ::org::apache::lucene::store::Directory getDirectory() const;
          ::java::util::Set getFieldNames() const;
          ::java::lang::Iterable getLiveCommitData() const;
          jlong getMaxCompletedSequenceNumber() const;
          ::java::util::Collection getMergingSegments() const;
          ::org::apache::lucene::index::MergePolicy$OneMerge getNextMerge() const;
          ::org::apache::lucene::index::DirectoryReader getReader() const;
          ::org::apache::lucene::index::DirectoryReader getReader(jboolean, jboolean) const;
          ::java::lang::Throwable getTragicException() const;
          jboolean hasDeletions() const;
          jboolean hasPendingMerges() const;
          jboolean hasUncommittedChanges() const;
          void incRefDeleter(const ::org::apache::lucene::index::SegmentInfos &) const;
          static jboolean isLocked(const ::org::apache::lucene::store::Directory &);
          jboolean isOpen() const;
          jint maxDoc() const;
          void maybeMerge() const;
          void merge(const ::org::apache::lucene::index::MergePolicy$OneMerge &) const;
          jint numDeletedDocs(const ::org::apache::lucene::index::SegmentCommitInfo &) const;
          jint numDocs() const;
          jint numRamDocs() const;
          jlong prepareCommit() const;
          jlong ramBytesUsed() const;
          void rollback() const;
          void setCommitData(const ::java::util::Map &) const;
          void setLiveCommitData(const ::java::lang::Iterable &) const;
          void setLiveCommitData(const ::java::lang::Iterable &, jboolean) const;
          jlong tryDeleteDocument(const ::org::apache::lucene::index::IndexReader &, jint) const;
          jlong updateBinaryDocValue(const ::org::apache::lucene::index::Term &, const ::java::lang::String &, const ::org::apache::lucene::util::BytesRef &) const;
          jlong updateDocValues(const ::org::apache::lucene::index::Term &, const JArray< ::org::apache::lucene::document::Field > &) const;
          jlong updateDocument(const ::org::apache::lucene::index::Term &, const ::java::lang::Iterable &) const;
          jlong updateDocuments(const ::org::apache::lucene::index::Term &, const ::java::lang::Iterable &) const;
          jlong updateNumericDocValue(const ::org::apache::lucene::index::Term &, const ::java::lang::String &, jlong) const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace index {
        extern PyTypeObject PY_TYPE(IndexWriter);

        class t_IndexWriter {
        public:
          PyObject_HEAD
          IndexWriter object;
          static PyObject *wrap_Object(const IndexWriter&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
