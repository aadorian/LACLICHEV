#ifndef org_apache_lucene_document_DoublePoint_H
#define org_apache_lucene_document_DoublePoint_H

#include "org/apache/lucene/document/Field.h"

namespace java {
  namespace lang {
    class Double;
    class Class;
    class Number;
    class String;
  }
  namespace util {
    class Collection;
  }
}
namespace org {
  namespace apache {
    namespace lucene {
      namespace util {
        class BytesRef;
      }
      namespace search {
        class Query;
      }
    }
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {

        class DoublePoint : public ::org::apache::lucene::document::Field {
        public:
          enum {
            mid_init$_eef2720d25f91614,
            mid_decodeDimension_e2dbfd4f752168c1,
            mid_encodeDimension_6b58c78ea23116e0,
            mid_newExactQuery_c2dfc89afaa66b5e,
            mid_newRangeQuery_18a5c003d8c2eeff,
            mid_newRangeQuery_153813003dbc2cc4,
            mid_newSetQuery_615f542566330d6f,
            mid_newSetQuery_6c563931926f34f6,
            mid_nextDown_0df877b86e980916,
            mid_nextUp_0df877b86e980916,
            mid_numericValue_b3a937517d29a25b,
            mid_setBytesValue_b520e38da2ff4ef3,
            mid_setDoubleValue_1b85c158638de45b,
            mid_setDoubleValues_0b042980913e0149,
            mid_toString_8cdd42a672015029,
            max_mid
          };

          static ::java::lang::Class *class$;
          static jmethodID *mids$;
          static bool live$;
          static jclass initializeClass(bool);

          explicit DoublePoint(jobject obj) : ::org::apache::lucene::document::Field(obj) {
            if (obj != NULL)
              env->getClass(initializeClass);
          }
          DoublePoint(const DoublePoint& obj) : ::org::apache::lucene::document::Field(obj) {}

          DoublePoint(const ::java::lang::String &, const JArray< jdouble > &);

          static jdouble decodeDimension(const JArray< jbyte > &, jint);
          static void encodeDimension(jdouble, const JArray< jbyte > &, jint);
          static ::org::apache::lucene::search::Query newExactQuery(const ::java::lang::String &, jdouble);
          static ::org::apache::lucene::search::Query newRangeQuery(const ::java::lang::String &, const JArray< jdouble > &, const JArray< jdouble > &);
          static ::org::apache::lucene::search::Query newRangeQuery(const ::java::lang::String &, jdouble, jdouble);
          static ::org::apache::lucene::search::Query newSetQuery(const ::java::lang::String &, const JArray< jdouble > &);
          static ::org::apache::lucene::search::Query newSetQuery(const ::java::lang::String &, const ::java::util::Collection &);
          static jdouble nextDown(jdouble);
          static jdouble nextUp(jdouble);
          ::java::lang::Number numericValue() const;
          void setBytesValue(const ::org::apache::lucene::util::BytesRef &) const;
          void setDoubleValue(jdouble) const;
          void setDoubleValues(const JArray< jdouble > &) const;
          ::java::lang::String toString() const;
        };
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace document {
        extern PyTypeObject PY_TYPE(DoublePoint);

        class t_DoublePoint {
        public:
          PyObject_HEAD
          DoublePoint object;
          static PyObject *wrap_Object(const DoublePoint&);
          static PyObject *wrap_jobject(const jobject&);
          static void install(PyObject *module);
          static void initialize(PyObject *module);
        };
      }
    }
  }
}

#endif
