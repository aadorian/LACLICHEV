#ifndef org_apache_lucene_search_spans_SpanPositionCheckQuery$SpanPositionCheckWeight_H
#define org_apache_lucene_search_spans_SpanPositionCheckQuery$SpanPositionCheckWeight_H

#include "org/apache/lucene/search/spans/SpanWeight.h"

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace spans {
          class SpanPositionCheckQuery;
          class Spans;
          class SpanWeight$Postings;
        }
        class IndexSearcher;
      }
      namespace index {
        class Term;
        class TermContext;
        class LeafReaderContext;
      }
    }
  }
}
namespace java {
  namespace io {
    class IOException;
  }
  namespace lang {
    class Class;
  }
  namespace util {
    class Set;
    class Map;
  }
}
template<class T> class JArray;

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace spans {

          class SpanPositionCheckQuery$SpanPositionCheckWeight : public ::org::apache::lucene::search::spans::SpanWeight {
          public:
            enum {
              mid_init$_2efbd8804f870085,
              mid_extractTermContexts_c63a2704a45ba212,
              mid_extractTerms_34e67f8c9ede20a4,
              mid_getSpans_7cf21bcb381674b4,
              max_mid
            };

            static ::java::lang::Class *class$;
            static jmethodID *mids$;
            static bool live$;
            static jclass initializeClass(bool);

            explicit SpanPositionCheckQuery$SpanPositionCheckWeight(jobject obj) : ::org::apache::lucene::search::spans::SpanWeight(obj) {
              if (obj != NULL)
                env->getClass(initializeClass);
            }
            SpanPositionCheckQuery$SpanPositionCheckWeight(const SpanPositionCheckQuery$SpanPositionCheckWeight& obj) : ::org::apache::lucene::search::spans::SpanWeight(obj) {}

            SpanPositionCheckQuery$SpanPositionCheckWeight(const ::org::apache::lucene::search::spans::SpanPositionCheckQuery &, const ::org::apache::lucene::search::spans::SpanWeight &, const ::org::apache::lucene::search::IndexSearcher &, const ::java::util::Map &);

            void extractTermContexts(const ::java::util::Map &) const;
            void extractTerms(const ::java::util::Set &) const;
            ::org::apache::lucene::search::spans::Spans getSpans(const ::org::apache::lucene::index::LeafReaderContext &, const ::org::apache::lucene::search::spans::SpanWeight$Postings &) const;
          };
        }
      }
    }
  }
}

#include <Python.h>

namespace org {
  namespace apache {
    namespace lucene {
      namespace search {
        namespace spans {
          extern PyTypeObject PY_TYPE(SpanPositionCheckQuery$SpanPositionCheckWeight);

          class t_SpanPositionCheckQuery$SpanPositionCheckWeight {
          public:
            PyObject_HEAD
            SpanPositionCheckQuery$SpanPositionCheckWeight object;
            static PyObject *wrap_Object(const SpanPositionCheckQuery$SpanPositionCheckWeight&);
            static PyObject *wrap_jobject(const jobject&);
            static void install(PyObject *module);
            static void initialize(PyObject *module);
          };
        }
      }
    }
  }
}

#endif
