
import os, sys

if sys.platform == 'win32':
  import jcc
from . import _lucene

__dir__ = os.path.abspath(os.path.dirname(__file__))

class JavaError(Exception):
  def getJavaException(self):
    return self.args[0]
  def __str__(self):
    writer = StringWriter()
    self.getJavaException().printStackTrace(PrintWriter(writer))
    return u"\n".join((unicode(super(JavaError, self)), u"    Java stacktrace:", unicode(writer)))

class InvalidArgsError(Exception):
  pass

_lucene._set_exception_types(JavaError, InvalidArgsError)

VERSION = "6.5.0"
CLASSPATH = [os.path.join(__dir__, "lucene-core-6.5.0.jar"), os.path.join(__dir__, "lucene-analyzers-common-6.5.0.jar"), os.path.join(__dir__, "lucene-memory-6.5.0.jar"), os.path.join(__dir__, "lucene-highlighter-6.5.0.jar"), os.path.join(__dir__, "extensions.jar"), os.path.join(__dir__, "lucene-queries-6.5.0.jar"), os.path.join(__dir__, "lucene-queryparser-6.5.0.jar"), os.path.join(__dir__, "lucene-sandbox-6.5.0.jar"), os.path.join(__dir__, "lucene-analyzers-stempel-6.5.0.jar"), os.path.join(__dir__, "lucene-grouping-6.5.0.jar"), os.path.join(__dir__, "lucene-join-6.5.0.jar"), os.path.join(__dir__, "lucene-facet-6.5.0.jar"), os.path.join(__dir__, "lucene-suggest-6.5.0.jar"), os.path.join(__dir__, "lucene-expressions-6.5.0.jar"), os.path.join(__dir__, "lucene-analyzers-kuromoji-6.5.0.jar"), os.path.join(__dir__, "lucene-misc-6.5.0.jar"), os.path.join(__dir__, "antlr4-runtime-4.5.1-1.jar"), os.path.join(__dir__, "asm-5.1.jar"), os.path.join(__dir__, "asm-commons-5.1.jar")]
CLASSPATH = os.pathsep.join(CLASSPATH)
_lucene.CLASSPATH = CLASSPATH
_lucene._set_function_self(_lucene.initVM, _lucene)

from ._lucene import *
from java.io import PrintWriter, StringWriter
